{
	"id": "cff0dc783fd433b457a551ebc41fa006",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.8",
	"solcLongVersion": "0.8.8+commit.dddeac2f",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contracts/CoinFlip.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\n\ncontract CoinFlip {\n\n    // Variables\n\n    address payable player1Address = payable (0x0); // player address variable\n    address payable player2Address = payable (0x0); // player address variable\n\n    bytes32 player1Commitment; // player 1 flips coin, true = heads, false = tails\n    bool player2Guess; // player 2 guesses which outcome player 1 has, ie. true or false\n\n    uint256 public betAmount; // how much has player 1 bet\n    uint256 public betExpiration = 2**256 - 1;\n\n\n    // Functions\n\n    function player1CommitmentHash (bool choice, uint256 nonce) external pure returns (bytes32) {\n        return keccak256(abi.encode(choice, nonce));\n    }\n\n    function makeBet (bytes32 hash) external payable {\n        // ensure that player 1 hasn't already made a bet yet,\n        // ie. player1's address should at this point still be the initial value, 0\n        // WHY DOES THIS MATTER?\n        require(player1Address == payable (0x0));\n        // ensure that player1 has provided a bet value and store it as the bet amount\n        require(msg.value > 0);\n        betAmount = msg.value;\n        // update and store player1's address, ie. update the address to the address from\n        // which the function is being called to make the bet\n        player1Address = payable(msg.sender);\n        // store player1's commitment hash\n        player1Commitment = hash;\n    }\n\n    function takeBet (bool choice) external payable {\n        // ensure that player 1has now placed their bet\n        require(player1Address != payable(0x0));\n        // ensure that player 2 has not yet accepted the bet, ie. player1's address should \n        // at this point still be the initial value, 0\n        require(player2Address == payable(0x0));\n        // ensure that the value provided by player 2 when taking the bet via this\n        // function is equal to the bet amount\n        require(msg.value == betAmount);\n        // update and store player2's address, ie. update the address to the address from\n        // which the function is being called to take the bet\n        player2Address = payable(msg.sender);\n        // store player2's guess\n        player2Guess = choice;\n        // update and store the bet expiration time\n        betExpiration = block.timestamp + 24 hours;\n    }\n\n    function revealWinner (bool choice, uint256 nonce) external {\n        // ensure that player 2 has accepted the bet - player 1 should not reveal their\n        // bet choice if player 2 has not accepted it yet\n        require(player2Address != payable(0x0));\n        // player 1 provides the input to this function - they reveal their bet so that\n        // the winner can be determined - ensure that the input, when hashed, matches \n        // player1's commitment\n        require(keccak256(abi.encode(choice, nonce)) == player1Commitment);\n        // ensure that the bet has not expired yet\n        require(block.timestamp < betExpiration);\n        // determine the winner and transfer the value stored in the contract to their\n        // address\n        if (player2Guess == choice) {\n            // player 2 wins, pay them\n            player2Address.transfer(address(this).balance);\n        }\n        else {\n            // player 1 wins, pay them\n            player1Address.transfer(address(this).balance);\n        }\n    }\n\n    function cancel () external {\n        // Allow player 1 to cancel the bet if it has not been accepted\n        // ensure that only player 1 can cancel the bet\n        require(msg.sender == player1Address);\n        // ensure that player 2 has not yet accepted the bet\n        require(player2Address == payable(0x0));\n        // transfer the value stored in the contract back to player 1\n        player1Address.transfer(address(this).balance);\n    }\n\n    function timeOut () external {\n        // Allow player 2 to win by default if player 1 has not revealed their bet by the \n        // time the bet expires\n        // ensure that only player 2 can call this function\n        require(msg.sender == player2Address);\n        // ensure that the bet has expired\n        require(block.timestamp >= betExpiration);\n        // transfer the value stored in the contract to player 2\n        player2Address.transfer(address(this).balance);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Contracts/CoinFlip.sol": {
				"CoinFlip": {
					"abi": [
						{
							"inputs": [],
							"name": "betAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "betExpiration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cancel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								}
							],
							"name": "makeBet",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "choice",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								}
							],
							"name": "player1CommitmentHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "choice",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								}
							],
							"name": "revealWinner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "choice",
									"type": "bool"
								}
							],
							"name": "takeBet",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "timeOut",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/CoinFlip.sol\":65:4304  contract CoinFlip {... */\n  mstore(0x40, 0x80)\n    /* \"Contracts/CoinFlip.sol\":150:153  0x0 */\n  0x00\n    /* \"Contracts/CoinFlip.sol\":108:154  address payable player1Address = payable (0x0) */\n  dup1\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Contracts/CoinFlip.sol\":229:232  0x0 */\n  0x00\n    /* \"Contracts/CoinFlip.sol\":187:233  address payable player2Address = payable (0x0) */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Contracts/CoinFlip.sol\":530:540  2**256 - 1 */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"Contracts/CoinFlip.sol\":499:540  uint256 public betExpiration = 2**256 - 1 */\n  0x05\n  sstore\n    /* \"Contracts/CoinFlip.sol\":65:4304  contract CoinFlip {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/CoinFlip.sol\":65:4304  contract CoinFlip {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd24257c0\n      gt\n      tag_10\n      jumpi\n      dup1\n      0xd24257c0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd97310af\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xea05a57f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xea8a1af0\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_10:\n      dup1\n      0x08fb69c6\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x284152dc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x38a3fde7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x614d85e1\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Contracts/CoinFlip.sol\":2340:3363  function revealWinner (bool choice, uint256 nonce) external {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"Contracts/CoinFlip.sol\":724:1435  function makeBet (bytes32 hash) external payable {... */\n    tag_3:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"Contracts/CoinFlip.sol\":1441:2334  function takeBet (bool choice) external payable {... */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"Contracts/CoinFlip.sol\":3821:4302  function timeOut () external {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      stop\n        /* \"Contracts/CoinFlip.sol\":440:464  uint256 public betAmount */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/CoinFlip.sol\":499:540  uint256 public betExpiration = 2**256 - 1 */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/CoinFlip.sol\":566:718  function player1CommitmentHash (bool choice, uint256 nonce) external pure returns (bytes32) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/CoinFlip.sol\":3369:3815  function cancel () external {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      stop\n        /* \"Contracts/CoinFlip.sol\":2340:3363  function revealWinner (bool choice, uint256 nonce) external {... */\n    tag_15:\n        /* \"Contracts/CoinFlip.sol\":2590:2593  0x0 */\n      0x00\n        /* \"Contracts/CoinFlip.sol\":2564:2594  player2Address != payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":2564:2578  player2Address */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":2564:2594  player2Address != payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Contracts/CoinFlip.sol\":2556:2595  require(player2Address != payable(0x0)) */\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n        /* \"Contracts/CoinFlip.sol\":2860:2877  player1Commitment */\n      sload(0x02)\n        /* \"Contracts/CoinFlip.sol\":2841:2847  choice */\n      dup3\n        /* \"Contracts/CoinFlip.sol\":2849:2854  nonce */\n      dup3\n        /* \"Contracts/CoinFlip.sol\":2830:2855  abi.encode(choice, nonce) */\n      add(0x20, mload(0x40))\n      tag_47\n      swap3\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Contracts/CoinFlip.sol\":2820:2856  keccak256(abi.encode(choice, nonce)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Contracts/CoinFlip.sol\":2820:2877  keccak256(abi.encode(choice, nonce)) == player1Commitment */\n      eq\n        /* \"Contracts/CoinFlip.sol\":2812:2878  require(keccak256(abi.encode(choice, nonce)) == player1Commitment) */\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n        /* \"Contracts/CoinFlip.sol\":2965:2978  betExpiration */\n      sload(0x05)\n        /* \"Contracts/CoinFlip.sol\":2947:2962  block.timestamp */\n      timestamp\n        /* \"Contracts/CoinFlip.sol\":2947:2978  block.timestamp < betExpiration */\n      lt\n        /* \"Contracts/CoinFlip.sol\":2939:2979  require(block.timestamp < betExpiration) */\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n        /* \"Contracts/CoinFlip.sol\":3115:3121  choice */\n      dup2\n        /* \"Contracts/CoinFlip.sol\":3099:3121  player2Guess == choice */\n      iszero\n      iszero\n        /* \"Contracts/CoinFlip.sol\":3099:3111  player2Guess */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Contracts/CoinFlip.sol\":3099:3121  player2Guess == choice */\n      iszero\n      iszero\n      eq\n        /* \"Contracts/CoinFlip.sol\":3095:3357  if (player2Guess == choice) {... */\n      iszero\n      tag_51\n      jumpi\n        /* \"Contracts/CoinFlip.sol\":3176:3190  player2Address */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":3176:3199  player2Address.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":3176:3222  player2Address.transfer(address(this).balance) */\n      0x08fc\n        /* \"Contracts/CoinFlip.sol\":3200:3221  address(this).balance */\n      selfbalance\n        /* \"Contracts/CoinFlip.sol\":3176:3222  player2Address.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_53\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_53:\n      pop\n        /* \"Contracts/CoinFlip.sol\":3095:3357  if (player2Guess == choice) {... */\n      jump(tag_54)\n    tag_51:\n        /* \"Contracts/CoinFlip.sol\":3300:3314  player1Address */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":3300:3323  player1Address.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":3300:3346  player1Address.transfer(address(this).balance) */\n      0x08fc\n        /* \"Contracts/CoinFlip.sol\":3324:3345  address(this).balance */\n      selfbalance\n        /* \"Contracts/CoinFlip.sol\":3300:3346  player1Address.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_56\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_56:\n      pop\n        /* \"Contracts/CoinFlip.sol\":3095:3357  if (player2Guess == choice) {... */\n    tag_54:\n        /* \"Contracts/CoinFlip.sol\":2340:3363  function revealWinner (bool choice, uint256 nonce) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/CoinFlip.sol\":724:1435  function makeBet (bytes32 hash) external payable {... */\n    tag_19:\n        /* \"Contracts/CoinFlip.sol\":998:1001  0x0 */\n      0x00\n        /* \"Contracts/CoinFlip.sol\":971:1002  player1Address == payable (0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":971:985  player1Address */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":971:1002  player1Address == payable (0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Contracts/CoinFlip.sol\":963:1003  require(player1Address == payable (0x0)) */\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n        /* \"Contracts/CoinFlip.sol\":1120:1121  0 */\n      0x00\n        /* \"Contracts/CoinFlip.sol\":1108:1117  msg.value */\n      callvalue\n        /* \"Contracts/CoinFlip.sol\":1108:1121  msg.value > 0 */\n      gt\n        /* \"Contracts/CoinFlip.sol\":1100:1122  require(msg.value > 0) */\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n        /* \"Contracts/CoinFlip.sol\":1144:1153  msg.value */\n      callvalue\n        /* \"Contracts/CoinFlip.sol\":1132:1141  betAmount */\n      0x04\n        /* \"Contracts/CoinFlip.sol\":1132:1153  betAmount = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Contracts/CoinFlip.sol\":1340:1350  msg.sender */\n      caller\n        /* \"Contracts/CoinFlip.sol\":1315:1329  player1Address */\n      0x00\n      dup1\n        /* \"Contracts/CoinFlip.sol\":1315:1351  player1Address = payable(msg.sender) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Contracts/CoinFlip.sol\":1424:1428  hash */\n      dup1\n        /* \"Contracts/CoinFlip.sol\":1404:1421  player1Commitment */\n      0x02\n        /* \"Contracts/CoinFlip.sol\":1404:1428  player1Commitment = hash */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Contracts/CoinFlip.sol\":724:1435  function makeBet (bytes32 hash) external payable {... */\n      pop\n      jump\t// out\n        /* \"Contracts/CoinFlip.sol\":1441:2334  function takeBet (bool choice) external payable {... */\n    tag_23:\n        /* \"Contracts/CoinFlip.sol\":1589:1592  0x0 */\n      0x00\n        /* \"Contracts/CoinFlip.sol\":1563:1593  player1Address != payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":1563:1577  player1Address */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":1563:1593  player1Address != payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Contracts/CoinFlip.sol\":1555:1594  require(player1Address != payable(0x0)) */\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n        /* \"Contracts/CoinFlip.sol\":1785:1788  0x0 */\n      0x00\n        /* \"Contracts/CoinFlip.sol\":1759:1789  player2Address == payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":1759:1773  player2Address */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":1759:1789  player2Address == payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Contracts/CoinFlip.sol\":1751:1790  require(player2Address == payable(0x0)) */\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n        /* \"Contracts/CoinFlip.sol\":1951:1960  betAmount */\n      sload(0x04)\n        /* \"Contracts/CoinFlip.sol\":1938:1947  msg.value */\n      callvalue\n        /* \"Contracts/CoinFlip.sol\":1938:1960  msg.value == betAmount */\n      eq\n        /* \"Contracts/CoinFlip.sol\":1930:1961  require(msg.value == betAmount) */\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n        /* \"Contracts/CoinFlip.sol\":2148:2158  msg.sender */\n      caller\n        /* \"Contracts/CoinFlip.sol\":2123:2137  player2Address */\n      0x01\n      0x00\n        /* \"Contracts/CoinFlip.sol\":2123:2159  player2Address = payable(msg.sender) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Contracts/CoinFlip.sol\":2217:2223  choice */\n      dup1\n        /* \"Contracts/CoinFlip.sol\":2202:2214  player2Guess */\n      0x03\n      0x00\n        /* \"Contracts/CoinFlip.sol\":2202:2223  player2Guess = choice */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Contracts/CoinFlip.sol\":2319:2327  24 hours */\n      0x015180\n        /* \"Contracts/CoinFlip.sol\":2301:2316  block.timestamp */\n      timestamp\n        /* \"Contracts/CoinFlip.sol\":2301:2327  block.timestamp + 24 hours */\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"Contracts/CoinFlip.sol\":2285:2298  betExpiration */\n      0x05\n        /* \"Contracts/CoinFlip.sol\":2285:2327  betExpiration = block.timestamp + 24 hours */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Contracts/CoinFlip.sol\":1441:2334  function takeBet (bool choice) external payable {... */\n      pop\n      jump\t// out\n        /* \"Contracts/CoinFlip.sol\":3821:4302  function timeOut () external {... */\n    tag_26:\n        /* \"Contracts/CoinFlip.sol\":4065:4079  player2Address */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":4051:4079  msg.sender == player2Address */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":4051:4061  msg.sender */\n      caller\n        /* \"Contracts/CoinFlip.sol\":4051:4079  msg.sender == player2Address */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Contracts/CoinFlip.sol\":4043:4080  require(msg.sender == player2Address) */\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n        /* \"Contracts/CoinFlip.sol\":4160:4173  betExpiration */\n      sload(0x05)\n        /* \"Contracts/CoinFlip.sol\":4141:4156  block.timestamp */\n      timestamp\n        /* \"Contracts/CoinFlip.sol\":4141:4173  block.timestamp >= betExpiration */\n      lt\n      iszero\n        /* \"Contracts/CoinFlip.sol\":4133:4174  require(block.timestamp >= betExpiration) */\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n        /* \"Contracts/CoinFlip.sol\":4249:4263  player2Address */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":4249:4272  player2Address.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":4249:4295  player2Address.transfer(address(this).balance) */\n      0x08fc\n        /* \"Contracts/CoinFlip.sol\":4273:4294  address(this).balance */\n      selfbalance\n        /* \"Contracts/CoinFlip.sol\":4249:4295  player2Address.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n        /* \"Contracts/CoinFlip.sol\":3821:4302  function timeOut () external {... */\n      jump\t// out\n        /* \"Contracts/CoinFlip.sol\":440:464  uint256 public betAmount */\n    tag_29:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"Contracts/CoinFlip.sol\":499:540  uint256 public betExpiration = 2**256 - 1 */\n    tag_34:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"Contracts/CoinFlip.sol\":566:718  function player1CommitmentHash (bool choice, uint256 nonce) external pure returns (bytes32) {... */\n    tag_39:\n        /* \"Contracts/CoinFlip.sol\":649:656  bytes32 */\n      0x00\n        /* \"Contracts/CoinFlip.sol\":696:702  choice */\n      dup3\n        /* \"Contracts/CoinFlip.sol\":704:709  nonce */\n      dup3\n        /* \"Contracts/CoinFlip.sol\":685:710  abi.encode(choice, nonce) */\n      add(0x20, mload(0x40))\n      tag_72\n      swap3\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Contracts/CoinFlip.sol\":675:711  keccak256(abi.encode(choice, nonce)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Contracts/CoinFlip.sol\":668:711  return keccak256(abi.encode(choice, nonce)) */\n      swap1\n      pop\n        /* \"Contracts/CoinFlip.sol\":566:718  function player1CommitmentHash (bool choice, uint256 nonce) external pure returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/CoinFlip.sol\":3369:3815  function cancel () external {... */\n    tag_44:\n        /* \"Contracts/CoinFlip.sol\":3557:3571  player1Address */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":3543:3571  msg.sender == player1Address */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":3543:3553  msg.sender */\n      caller\n        /* \"Contracts/CoinFlip.sol\":3543:3571  msg.sender == player1Address */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Contracts/CoinFlip.sol\":3535:3572  require(msg.sender == player1Address) */\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n        /* \"Contracts/CoinFlip.sol\":3677:3680  0x0 */\n      0x00\n        /* \"Contracts/CoinFlip.sol\":3651:3681  player2Address == payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":3651:3665  player2Address */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":3651:3681  player2Address == payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Contracts/CoinFlip.sol\":3643:3682  require(player2Address == payable(0x0)) */\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n        /* \"Contracts/CoinFlip.sol\":3762:3776  player1Address */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":3762:3785  player1Address.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":3762:3808  player1Address.transfer(address(this).balance) */\n      0x08fc\n        /* \"Contracts/CoinFlip.sol\":3786:3807  address(this).balance */\n      selfbalance\n        /* \"Contracts/CoinFlip.sol\":3762:3808  player1Address.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_77:\n      pop\n        /* \"Contracts/CoinFlip.sol\":3369:3815  function cancel () external {... */\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_79:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:424   */\n    tag_81:\n        /* \"#utility.yul\":368:375   */\n      0x00\n        /* \"#utility.yul\":411:416   */\n      dup2\n        /* \"#utility.yul\":404:417   */\n      iszero\n        /* \"#utility.yul\":397:418   */\n      iszero\n        /* \"#utility.yul\":386:418   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":430:546   */\n    tag_82:\n        /* \"#utility.yul\":500:521   */\n      tag_100\n        /* \"#utility.yul\":515:520   */\n      dup2\n        /* \"#utility.yul\":500:521   */\n      tag_81\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":493:498   */\n      dup2\n        /* \"#utility.yul\":490:522   */\n      eq\n        /* \"#utility.yul\":480:540   */\n      tag_101\n      jumpi\n        /* \"#utility.yul\":536:537   */\n      0x00\n        /* \"#utility.yul\":533:534   */\n      dup1\n        /* \"#utility.yul\":526:538   */\n      revert\n        /* \"#utility.yul\":480:540   */\n    tag_101:\n        /* \"#utility.yul\":430:546   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":552:685   */\n    tag_83:\n        /* \"#utility.yul\":595:600   */\n      0x00\n        /* \"#utility.yul\":633:639   */\n      dup2\n        /* \"#utility.yul\":620:640   */\n      calldataload\n        /* \"#utility.yul\":611:640   */\n      swap1\n      pop\n        /* \"#utility.yul\":649:679   */\n      tag_103\n        /* \"#utility.yul\":673:678   */\n      dup2\n        /* \"#utility.yul\":649:679   */\n      tag_82\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":552:685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":691:768   */\n    tag_84:\n        /* \"#utility.yul\":728:735   */\n      0x00\n        /* \"#utility.yul\":757:762   */\n      dup2\n        /* \"#utility.yul\":746:762   */\n      swap1\n      pop\n        /* \"#utility.yul\":691:768   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":774:896   */\n    tag_85:\n        /* \"#utility.yul\":847:871   */\n      tag_106\n        /* \"#utility.yul\":865:870   */\n      dup2\n        /* \"#utility.yul\":847:871   */\n      tag_84\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":840:845   */\n      dup2\n        /* \"#utility.yul\":837:872   */\n      eq\n        /* \"#utility.yul\":827:890   */\n      tag_107\n      jumpi\n        /* \"#utility.yul\":886:887   */\n      0x00\n        /* \"#utility.yul\":883:884   */\n      dup1\n        /* \"#utility.yul\":876:888   */\n      revert\n        /* \"#utility.yul\":827:890   */\n    tag_107:\n        /* \"#utility.yul\":774:896   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":902:1041   */\n    tag_86:\n        /* \"#utility.yul\":948:953   */\n      0x00\n        /* \"#utility.yul\":986:992   */\n      dup2\n        /* \"#utility.yul\":973:993   */\n      calldataload\n        /* \"#utility.yul\":964:993   */\n      swap1\n      pop\n        /* \"#utility.yul\":1002:1035   */\n      tag_109\n        /* \"#utility.yul\":1029:1034   */\n      dup2\n        /* \"#utility.yul\":1002:1035   */\n      tag_85\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":902:1041   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1047:1515   */\n    tag_14:\n        /* \"#utility.yul\":1112:1118   */\n      0x00\n        /* \"#utility.yul\":1120:1126   */\n      dup1\n        /* \"#utility.yul\":1169:1171   */\n      0x40\n        /* \"#utility.yul\":1157:1166   */\n      dup4\n        /* \"#utility.yul\":1148:1155   */\n      dup6\n        /* \"#utility.yul\":1144:1167   */\n      sub\n        /* \"#utility.yul\":1140:1172   */\n      slt\n        /* \"#utility.yul\":1137:1256   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":1175:1254   */\n      tag_112\n      tag_79\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1137:1256   */\n    tag_111:\n        /* \"#utility.yul\":1295:1296   */\n      0x00\n        /* \"#utility.yul\":1320:1370   */\n      tag_113\n        /* \"#utility.yul\":1362:1369   */\n      dup6\n        /* \"#utility.yul\":1353:1359   */\n      dup3\n        /* \"#utility.yul\":1342:1351   */\n      dup7\n        /* \"#utility.yul\":1338:1360   */\n      add\n        /* \"#utility.yul\":1320:1370   */\n      tag_83\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":1310:1370   */\n      swap3\n      pop\n        /* \"#utility.yul\":1266:1380   */\n      pop\n        /* \"#utility.yul\":1419:1421   */\n      0x20\n        /* \"#utility.yul\":1445:1498   */\n      tag_114\n        /* \"#utility.yul\":1490:1497   */\n      dup6\n        /* \"#utility.yul\":1481:1487   */\n      dup3\n        /* \"#utility.yul\":1470:1479   */\n      dup7\n        /* \"#utility.yul\":1466:1488   */\n      add\n        /* \"#utility.yul\":1445:1498   */\n      tag_86\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":1435:1498   */\n      swap2\n      pop\n        /* \"#utility.yul\":1390:1508   */\n      pop\n        /* \"#utility.yul\":1047:1515   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1521:1598   */\n    tag_87:\n        /* \"#utility.yul\":1558:1565   */\n      0x00\n        /* \"#utility.yul\":1587:1592   */\n      dup2\n        /* \"#utility.yul\":1576:1592   */\n      swap1\n      pop\n        /* \"#utility.yul\":1521:1598   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1604:1726   */\n    tag_88:\n        /* \"#utility.yul\":1677:1701   */\n      tag_117\n        /* \"#utility.yul\":1695:1700   */\n      dup2\n        /* \"#utility.yul\":1677:1701   */\n      tag_87\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1670:1675   */\n      dup2\n        /* \"#utility.yul\":1667:1702   */\n      eq\n        /* \"#utility.yul\":1657:1720   */\n      tag_118\n      jumpi\n        /* \"#utility.yul\":1716:1717   */\n      0x00\n        /* \"#utility.yul\":1713:1714   */\n      dup1\n        /* \"#utility.yul\":1706:1718   */\n      revert\n        /* \"#utility.yul\":1657:1720   */\n    tag_118:\n        /* \"#utility.yul\":1604:1726   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1732:1871   */\n    tag_89:\n        /* \"#utility.yul\":1778:1783   */\n      0x00\n        /* \"#utility.yul\":1816:1822   */\n      dup2\n        /* \"#utility.yul\":1803:1823   */\n      calldataload\n        /* \"#utility.yul\":1794:1823   */\n      swap1\n      pop\n        /* \"#utility.yul\":1832:1865   */\n      tag_120\n        /* \"#utility.yul\":1859:1864   */\n      dup2\n        /* \"#utility.yul\":1832:1865   */\n      tag_88\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1732:1871   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1877:2206   */\n    tag_18:\n        /* \"#utility.yul\":1936:1942   */\n      0x00\n        /* \"#utility.yul\":1985:1987   */\n      0x20\n        /* \"#utility.yul\":1973:1982   */\n      dup3\n        /* \"#utility.yul\":1964:1971   */\n      dup5\n        /* \"#utility.yul\":1960:1983   */\n      sub\n        /* \"#utility.yul\":1956:1988   */\n      slt\n        /* \"#utility.yul\":1953:2072   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":1991:2070   */\n      tag_123\n      tag_79\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":1953:2072   */\n    tag_122:\n        /* \"#utility.yul\":2111:2112   */\n      0x00\n        /* \"#utility.yul\":2136:2189   */\n      tag_124\n        /* \"#utility.yul\":2181:2188   */\n      dup5\n        /* \"#utility.yul\":2172:2178   */\n      dup3\n        /* \"#utility.yul\":2161:2170   */\n      dup6\n        /* \"#utility.yul\":2157:2179   */\n      add\n        /* \"#utility.yul\":2136:2189   */\n      tag_89\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2126:2189   */\n      swap2\n      pop\n        /* \"#utility.yul\":2082:2199   */\n      pop\n        /* \"#utility.yul\":1877:2206   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2212:2535   */\n    tag_22:\n        /* \"#utility.yul\":2268:2274   */\n      0x00\n        /* \"#utility.yul\":2317:2319   */\n      0x20\n        /* \"#utility.yul\":2305:2314   */\n      dup3\n        /* \"#utility.yul\":2296:2303   */\n      dup5\n        /* \"#utility.yul\":2292:2315   */\n      sub\n        /* \"#utility.yul\":2288:2320   */\n      slt\n        /* \"#utility.yul\":2285:2404   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":2323:2402   */\n      tag_127\n      tag_79\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2285:2404   */\n    tag_126:\n        /* \"#utility.yul\":2443:2444   */\n      0x00\n        /* \"#utility.yul\":2468:2518   */\n      tag_128\n        /* \"#utility.yul\":2510:2517   */\n      dup5\n        /* \"#utility.yul\":2501:2507   */\n      dup3\n        /* \"#utility.yul\":2490:2499   */\n      dup6\n        /* \"#utility.yul\":2486:2508   */\n      add\n        /* \"#utility.yul\":2468:2518   */\n      tag_83\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":2458:2518   */\n      swap2\n      pop\n        /* \"#utility.yul\":2414:2528   */\n      pop\n        /* \"#utility.yul\":2212:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2659   */\n    tag_90:\n        /* \"#utility.yul\":2628:2652   */\n      tag_130\n        /* \"#utility.yul\":2646:2651   */\n      dup2\n        /* \"#utility.yul\":2628:2652   */\n      tag_84\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2623:2626   */\n      dup3\n        /* \"#utility.yul\":2616:2653   */\n      mstore\n        /* \"#utility.yul\":2541:2659   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2665:2887   */\n    tag_31:\n        /* \"#utility.yul\":2758:2762   */\n      0x00\n        /* \"#utility.yul\":2796:2798   */\n      0x20\n        /* \"#utility.yul\":2785:2794   */\n      dup3\n        /* \"#utility.yul\":2781:2799   */\n      add\n        /* \"#utility.yul\":2773:2799   */\n      swap1\n      pop\n        /* \"#utility.yul\":2809:2880   */\n      tag_132\n        /* \"#utility.yul\":2877:2878   */\n      0x00\n        /* \"#utility.yul\":2866:2875   */\n      dup4\n        /* \"#utility.yul\":2862:2879   */\n      add\n        /* \"#utility.yul\":2853:2859   */\n      dup5\n        /* \"#utility.yul\":2809:2880   */\n      tag_90\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":2665:2887   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2893:3011   */\n    tag_91:\n        /* \"#utility.yul\":2980:3004   */\n      tag_134\n        /* \"#utility.yul\":2998:3003   */\n      dup2\n        /* \"#utility.yul\":2980:3004   */\n      tag_87\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":2975:2978   */\n      dup3\n        /* \"#utility.yul\":2968:3005   */\n      mstore\n        /* \"#utility.yul\":2893:3011   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3017:3239   */\n    tag_41:\n        /* \"#utility.yul\":3110:3114   */\n      0x00\n        /* \"#utility.yul\":3148:3150   */\n      0x20\n        /* \"#utility.yul\":3137:3146   */\n      dup3\n        /* \"#utility.yul\":3133:3151   */\n      add\n        /* \"#utility.yul\":3125:3151   */\n      swap1\n      pop\n        /* \"#utility.yul\":3161:3232   */\n      tag_136\n        /* \"#utility.yul\":3229:3230   */\n      0x00\n        /* \"#utility.yul\":3218:3227   */\n      dup4\n        /* \"#utility.yul\":3214:3231   */\n      add\n        /* \"#utility.yul\":3205:3211   */\n      dup5\n        /* \"#utility.yul\":3161:3232   */\n      tag_91\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":3017:3239   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3245:3354   */\n    tag_92:\n        /* \"#utility.yul\":3326:3347   */\n      tag_138\n        /* \"#utility.yul\":3341:3346   */\n      dup2\n        /* \"#utility.yul\":3326:3347   */\n      tag_81\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3321:3324   */\n      dup3\n        /* \"#utility.yul\":3314:3348   */\n      mstore\n        /* \"#utility.yul\":3245:3354   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3360:3680   */\n    tag_48:\n        /* \"#utility.yul\":3475:3479   */\n      0x00\n        /* \"#utility.yul\":3513:3515   */\n      0x40\n        /* \"#utility.yul\":3502:3511   */\n      dup3\n        /* \"#utility.yul\":3498:3516   */\n      add\n        /* \"#utility.yul\":3490:3516   */\n      swap1\n      pop\n        /* \"#utility.yul\":3526:3591   */\n      tag_140\n        /* \"#utility.yul\":3588:3589   */\n      0x00\n        /* \"#utility.yul\":3577:3586   */\n      dup4\n        /* \"#utility.yul\":3573:3590   */\n      add\n        /* \"#utility.yul\":3564:3570   */\n      dup6\n        /* \"#utility.yul\":3526:3591   */\n      tag_92\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3601:3673   */\n      tag_141\n        /* \"#utility.yul\":3669:3671   */\n      0x20\n        /* \"#utility.yul\":3658:3667   */\n      dup4\n        /* \"#utility.yul\":3654:3672   */\n      add\n        /* \"#utility.yul\":3645:3651   */\n      dup5\n        /* \"#utility.yul\":3601:3673   */\n      tag_90\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":3360:3680   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3686:3866   */\n    tag_93:\n        /* \"#utility.yul\":3734:3811   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3731:3732   */\n      0x00\n        /* \"#utility.yul\":3724:3812   */\n      mstore\n        /* \"#utility.yul\":3831:3835   */\n      0x11\n        /* \"#utility.yul\":3828:3829   */\n      0x04\n        /* \"#utility.yul\":3821:3836   */\n      mstore\n        /* \"#utility.yul\":3855:3859   */\n      0x24\n        /* \"#utility.yul\":3852:3853   */\n      0x00\n        /* \"#utility.yul\":3845:3860   */\n      revert\n        /* \"#utility.yul\":3872:4177   */\n    tag_65:\n        /* \"#utility.yul\":3912:3915   */\n      0x00\n        /* \"#utility.yul\":3931:3951   */\n      tag_144\n        /* \"#utility.yul\":3949:3950   */\n      dup3\n        /* \"#utility.yul\":3931:3951   */\n      tag_84\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3926:3951   */\n      swap2\n      pop\n        /* \"#utility.yul\":3965:3985   */\n      tag_145\n        /* \"#utility.yul\":3983:3984   */\n      dup4\n        /* \"#utility.yul\":3965:3985   */\n      tag_84\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":3960:3985   */\n      swap3\n      pop\n        /* \"#utility.yul\":4119:4120   */\n      dup3\n        /* \"#utility.yul\":4051:4117   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4047:4121   */\n      sub\n        /* \"#utility.yul\":4044:4045   */\n      dup3\n        /* \"#utility.yul\":4041:4122   */\n      gt\n        /* \"#utility.yul\":4038:4145   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":4125:4143   */\n      tag_147\n      tag_93\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":4038:4145   */\n    tag_146:\n        /* \"#utility.yul\":4169:4170   */\n      dup3\n        /* \"#utility.yul\":4166:4167   */\n      dup3\n        /* \"#utility.yul\":4162:4171   */\n      add\n        /* \"#utility.yul\":4155:4171   */\n      swap1\n      pop\n        /* \"#utility.yul\":3872:4177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fc1eccb4c4118783900180919e413ffae454d4be48c3ccda96546c8bdf064f7a64736f6c63430008080033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6005553480156100b757600080fd5b506109dd806100c76000396000f3fe60806040526004361061007b5760003560e01c8063d24257c01161004e578063d24257c0146100f8578063d97310af14610123578063ea05a57f1461014e578063ea8a1af01461018b5761007b565b806308fb69c614610080578063284152dc146100a957806338a3fde7146100c5578063614d85e1146100e1575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a291906107c6565b6101a2565b005b6100c360048036038101906100be919061083c565b610337565b005b6100df60048036038101906100da9190610869565b6103ee565b005b3480156100ed57600080fd5b506100f6610524565b005b34801561010457600080fd5b5061010d6105f8565b60405161011a91906108a5565b60405180910390f35b34801561012f57600080fd5b506101386105fe565b60405161014591906108a5565b60405180910390f35b34801561015a57600080fd5b50610175600480360381019061017091906107c6565b610604565b60405161018291906108cf565b60405180910390f35b34801561019757600080fd5b506101a0610637565b005b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156101fe57600080fd5b60025482826040516020016102149291906108f9565b604051602081830303815290604052805190602001201461023457600080fd5b600554421061024257600080fd5b811515600360009054906101000a900460ff16151514156102cb57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156102c5573d6000803e3d6000fd5b50610333565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610331573d6000803e3d6000fd5b505b5050565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461039057600080fd5b6000341161039d57600080fd5b34600481905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060028190555050565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561044857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104a357600080fd5b60045434146104b157600080fd5b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548160ff021916908315150217905550620151804261051b9190610951565b60058190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461057e57600080fd5b60055442101561058d57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156105f5573d6000803e3d6000fd5b50565b60045481565b60055481565b600082826040516020016106199291906108f9565b60405160208183030381529060405280519060200120905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461068f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106ea57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610750573d6000803e3d6000fd5b50565b600080fd5b60008115159050919050565b61076d81610758565b811461077857600080fd5b50565b60008135905061078a81610764565b92915050565b6000819050919050565b6107a381610790565b81146107ae57600080fd5b50565b6000813590506107c08161079a565b92915050565b600080604083850312156107dd576107dc610753565b5b60006107eb8582860161077b565b92505060206107fc858286016107b1565b9150509250929050565b6000819050919050565b61081981610806565b811461082457600080fd5b50565b60008135905061083681610810565b92915050565b60006020828403121561085257610851610753565b5b600061086084828501610827565b91505092915050565b60006020828403121561087f5761087e610753565b5b600061088d8482850161077b565b91505092915050565b61089f81610790565b82525050565b60006020820190506108ba6000830184610896565b92915050565b6108c981610806565b82525050565b60006020820190506108e460008301846108c0565b92915050565b6108f381610758565b82525050565b600060408201905061090e60008301856108ea565b61091b6020830184610896565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061095c82610790565b915061096783610790565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561099c5761099b610922565b5b82820190509291505056fea2646970667358221220fc1eccb4c4118783900180919e413ffae454d4be48c3ccda96546c8bdf064f7a64736f6c63430008080033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9DD DUP1 PUSH2 0xC7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD24257C0 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xD24257C0 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xD97310AF EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xEA05A57F EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xEA8A1AF0 EQ PUSH2 0x18B JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x8FB69C6 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x284152DC EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x38A3FDE7 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x614D85E1 EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x83C JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x869 JUMP JUMPDEST PUSH2 0x3EE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF6 PUSH2 0x524 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x5F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x8CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A0 PUSH2 0x637 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x214 SWAP3 SWAP2 SWAP1 PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP LT PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x2CB JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x333 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x331 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x4 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD CALLVALUE EQ PUSH2 0x4B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x15180 TIMESTAMP PUSH2 0x51B SWAP2 SWAP1 PUSH2 0x951 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP LT ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x619 SWAP3 SWAP2 SWAP1 PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x750 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x76D DUP2 PUSH2 0x758 JUMP JUMPDEST DUP2 EQ PUSH2 0x778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x78A DUP2 PUSH2 0x764 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7A3 DUP2 PUSH2 0x790 JUMP JUMPDEST DUP2 EQ PUSH2 0x7AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7C0 DUP2 PUSH2 0x79A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7DD JUMPI PUSH2 0x7DC PUSH2 0x753 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7EB DUP6 DUP3 DUP7 ADD PUSH2 0x77B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7FC DUP6 DUP3 DUP7 ADD PUSH2 0x7B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x819 DUP2 PUSH2 0x806 JUMP JUMPDEST DUP2 EQ PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x836 DUP2 PUSH2 0x810 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x852 JUMPI PUSH2 0x851 PUSH2 0x753 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x860 DUP5 DUP3 DUP6 ADD PUSH2 0x827 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x87F JUMPI PUSH2 0x87E PUSH2 0x753 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x88D DUP5 DUP3 DUP6 ADD PUSH2 0x77B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x89F DUP2 PUSH2 0x790 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8BA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x896 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8C9 DUP2 PUSH2 0x806 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8F3 DUP2 PUSH2 0x758 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x90E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x8EA JUMP JUMPDEST PUSH2 0x91B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x896 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x95C DUP3 PUSH2 0x790 JUMP JUMPDEST SWAP2 POP PUSH2 0x967 DUP4 PUSH2 0x790 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x99C JUMPI PUSH2 0x99B PUSH2 0x922 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0x1E 0xCC 0xB4 0xC4 GT DUP8 DUP4 SWAP1 ADD DUP1 SWAP2 SWAP15 COINBASE EXTCODEHASH STATICCALL 0xE4 SLOAD 0xD4 0xBE BASEFEE 0xC3 0xCC 0xDA SWAP7 SLOAD PUSH13 0x8BDF064F7A64736F6C63430008 ADDMOD STOP CALLER ",
							"sourceMap": "65:4239:0:-:0;;;150:3;108:46;;;;;;;;;;;;;;;;;;;;229:3;187:46;;;;;;;;;;;;;;;;;;;;530:10;499:41;;65:4239;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@betAmount_19": {
									"entryPoint": 1528,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@betExpiration_26": {
									"entryPoint": 1534,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cancel_225": {
									"entryPoint": 1591,
									"id": 225,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@makeBet_83": {
									"entryPoint": 823,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@player1CommitmentHash_44": {
									"entryPoint": 1540,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@revealWinner_195": {
									"entryPoint": 418,
									"id": 195,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@takeBet_133": {
									"entryPoint": 1006,
									"id": 133,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@timeOut_253": {
									"entryPoint": 1316,
									"id": 253,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool": {
									"entryPoint": 1915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 2087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 2153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_boolt_uint256": {
									"entryPoint": 1990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 2108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": 2297,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 2255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2338,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1875,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 2064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4180:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "376:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "386:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "411:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "404:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "404:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "397:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "397:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "386:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "358:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "368:7:1",
														"type": ""
													}
												],
												"src": "334:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "524:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "533:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "536:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "526:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "526:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "526:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "493:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "515:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "500:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "500:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "490:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "490:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "483:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:40:1"
															},
															"nodeType": "YulIf",
															"src": "480:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "463:5:1",
														"type": ""
													}
												],
												"src": "430:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "601:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "611:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "620:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "620:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "611:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "673:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "649:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "579:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "587:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "595:5:1",
														"type": ""
													}
												],
												"src": "552:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "736:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "746:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "757:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "746:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "718:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "728:7:1",
														"type": ""
													}
												],
												"src": "691:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "817:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "874:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "883:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "886:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "876:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "876:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "876:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "840:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "865:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "847:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "847:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "837:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "837:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "830:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "830:43:1"
															},
															"nodeType": "YulIf",
															"src": "827:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "810:5:1",
														"type": ""
													}
												],
												"src": "774:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "954:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "964:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "986:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "973:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "973:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "964:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1029:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1002:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1002:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1002:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "932:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "940:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "948:5:1",
														"type": ""
													}
												],
												"src": "902:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1127:388:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1173:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1175:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1175:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1175:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1148:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1157:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1144:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1144:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1169:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:32:1"
															},
															"nodeType": "YulIf",
															"src": "1137:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1266:114:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1281:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1295:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1285:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1310:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1342:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1353:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1338:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1338:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1320:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1320:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1310:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1390:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1405:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1419:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1409:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1435:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1470:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1481:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1466:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1466:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1490:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1445:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1445:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1435:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1089:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1100:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1112:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1120:6:1",
														"type": ""
													}
												],
												"src": "1047:468:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1566:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1576:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1587:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1576:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1548:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1558:7:1",
														"type": ""
													}
												],
												"src": "1521:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1647:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1704:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1716:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1706:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1706:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1706:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1670:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1695:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "1677:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1677:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1667:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1667:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:43:1"
															},
															"nodeType": "YulIf",
															"src": "1657:63:1"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1640:5:1",
														"type": ""
													}
												],
												"src": "1604:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1784:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1794:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1816:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1803:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1803:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1794:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1859:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "1832:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1832:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1832:33:1"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1762:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1770:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1778:5:1",
														"type": ""
													}
												],
												"src": "1732:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1943:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1989:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1991:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1991:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1991:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1964:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1973:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1960:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1960:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1985:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1956:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1956:32:1"
															},
															"nodeType": "YulIf",
															"src": "1953:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2082:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2097:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2111:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2101:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2126:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2161:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2172:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2157:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2157:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2181:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "2136:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2136:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2126:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1913:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1924:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1936:6:1",
														"type": ""
													}
												],
												"src": "1877:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2275:260:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2321:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2323:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2323:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2323:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2296:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2305:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2292:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2292:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2317:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2288:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2288:32:1"
															},
															"nodeType": "YulIf",
															"src": "2285:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2414:114:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2429:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2443:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2433:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2458:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2490:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2501:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2486:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2486:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2510:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2468:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2468:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2458:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2245:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2256:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2268:6:1",
														"type": ""
													}
												],
												"src": "2212:323:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2606:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2623:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2646:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2628:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2628:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2616:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2616:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2616:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2594:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2601:3:1",
														"type": ""
													}
												],
												"src": "2541:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2763:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2773:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2785:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2796:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2781:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2781:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2773:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2853:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2866:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2877:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2862:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2862:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2809:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2809:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2809:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2735:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2747:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2758:4:1",
														"type": ""
													}
												],
												"src": "2665:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2958:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2975:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2998:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "2980:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2980:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2968:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2968:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2968:37:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2946:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2953:3:1",
														"type": ""
													}
												],
												"src": "2893:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3115:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3205:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3218:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3229:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3214:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3214:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3161:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3161:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3161:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3087:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3099:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3110:4:1",
														"type": ""
													}
												],
												"src": "3017:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3304:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3321:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3341:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3326:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3326:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3314:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3314:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3314:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3292:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3299:3:1",
														"type": ""
													}
												],
												"src": "3245:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3480:200:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3490:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3502:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3513:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3498:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3498:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3490:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3564:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3577:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3588:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3573:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3573:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3526:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3526:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3526:65:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3645:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3658:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3669:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3654:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3654:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3601:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3601:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3601:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3444:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3456:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3464:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3475:4:1",
														"type": ""
													}
												],
												"src": "3360:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3714:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3731:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3734:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3724:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3724:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3724:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3828:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3831:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3821:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3821:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3821:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3852:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3855:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3845:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3845:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3845:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3686:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3916:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3926:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3949:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3931:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3931:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3926:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3960:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3983:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3965:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3965:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3960:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4123:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4125:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4125:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4125:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4044:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4051:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4119:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4047:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4047:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:81:1"
															},
															"nodeType": "YulIf",
															"src": "4038:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4155:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4166:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4169:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4162:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4162:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4155:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3903:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3906:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3912:3:1",
														"type": ""
													}
												],
												"src": "3872:305:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_boolt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061007b5760003560e01c8063d24257c01161004e578063d24257c0146100f8578063d97310af14610123578063ea05a57f1461014e578063ea8a1af01461018b5761007b565b806308fb69c614610080578063284152dc146100a957806338a3fde7146100c5578063614d85e1146100e1575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a291906107c6565b6101a2565b005b6100c360048036038101906100be919061083c565b610337565b005b6100df60048036038101906100da9190610869565b6103ee565b005b3480156100ed57600080fd5b506100f6610524565b005b34801561010457600080fd5b5061010d6105f8565b60405161011a91906108a5565b60405180910390f35b34801561012f57600080fd5b506101386105fe565b60405161014591906108a5565b60405180910390f35b34801561015a57600080fd5b50610175600480360381019061017091906107c6565b610604565b60405161018291906108cf565b60405180910390f35b34801561019757600080fd5b506101a0610637565b005b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156101fe57600080fd5b60025482826040516020016102149291906108f9565b604051602081830303815290604052805190602001201461023457600080fd5b600554421061024257600080fd5b811515600360009054906101000a900460ff16151514156102cb57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156102c5573d6000803e3d6000fd5b50610333565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610331573d6000803e3d6000fd5b505b5050565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461039057600080fd5b6000341161039d57600080fd5b34600481905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060028190555050565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561044857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104a357600080fd5b60045434146104b157600080fd5b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548160ff021916908315150217905550620151804261051b9190610951565b60058190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461057e57600080fd5b60055442101561058d57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156105f5573d6000803e3d6000fd5b50565b60045481565b60055481565b600082826040516020016106199291906108f9565b60405160208183030381529060405280519060200120905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461068f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106ea57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610750573d6000803e3d6000fd5b50565b600080fd5b60008115159050919050565b61076d81610758565b811461077857600080fd5b50565b60008135905061078a81610764565b92915050565b6000819050919050565b6107a381610790565b81146107ae57600080fd5b50565b6000813590506107c08161079a565b92915050565b600080604083850312156107dd576107dc610753565b5b60006107eb8582860161077b565b92505060206107fc858286016107b1565b9150509250929050565b6000819050919050565b61081981610806565b811461082457600080fd5b50565b60008135905061083681610810565b92915050565b60006020828403121561085257610851610753565b5b600061086084828501610827565b91505092915050565b60006020828403121561087f5761087e610753565b5b600061088d8482850161077b565b91505092915050565b61089f81610790565b82525050565b60006020820190506108ba6000830184610896565b92915050565b6108c981610806565b82525050565b60006020820190506108e460008301846108c0565b92915050565b6108f381610758565b82525050565b600060408201905061090e60008301856108ea565b61091b6020830184610896565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061095c82610790565b915061096783610790565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561099c5761099b610922565b5b82820190509291505056fea2646970667358221220fc1eccb4c4118783900180919e413ffae454d4be48c3ccda96546c8bdf064f7a64736f6c63430008080033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD24257C0 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xD24257C0 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xD97310AF EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xEA05A57F EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xEA8A1AF0 EQ PUSH2 0x18B JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x8FB69C6 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x284152DC EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x38A3FDE7 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x614D85E1 EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x83C JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x869 JUMP JUMPDEST PUSH2 0x3EE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF6 PUSH2 0x524 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x5F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x8CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A0 PUSH2 0x637 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x214 SWAP3 SWAP2 SWAP1 PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP LT PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x2CB JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x333 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x331 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x4 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD CALLVALUE EQ PUSH2 0x4B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x15180 TIMESTAMP PUSH2 0x51B SWAP2 SWAP1 PUSH2 0x951 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP LT ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x619 SWAP3 SWAP2 SWAP1 PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x750 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x76D DUP2 PUSH2 0x758 JUMP JUMPDEST DUP2 EQ PUSH2 0x778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x78A DUP2 PUSH2 0x764 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7A3 DUP2 PUSH2 0x790 JUMP JUMPDEST DUP2 EQ PUSH2 0x7AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7C0 DUP2 PUSH2 0x79A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7DD JUMPI PUSH2 0x7DC PUSH2 0x753 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7EB DUP6 DUP3 DUP7 ADD PUSH2 0x77B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7FC DUP6 DUP3 DUP7 ADD PUSH2 0x7B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x819 DUP2 PUSH2 0x806 JUMP JUMPDEST DUP2 EQ PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x836 DUP2 PUSH2 0x810 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x852 JUMPI PUSH2 0x851 PUSH2 0x753 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x860 DUP5 DUP3 DUP6 ADD PUSH2 0x827 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x87F JUMPI PUSH2 0x87E PUSH2 0x753 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x88D DUP5 DUP3 DUP6 ADD PUSH2 0x77B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x89F DUP2 PUSH2 0x790 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8BA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x896 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8C9 DUP2 PUSH2 0x806 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8F3 DUP2 PUSH2 0x758 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x90E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x8EA JUMP JUMPDEST PUSH2 0x91B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x896 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x95C DUP3 PUSH2 0x790 JUMP JUMPDEST SWAP2 POP PUSH2 0x967 DUP4 PUSH2 0x790 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x99C JUMPI PUSH2 0x99B PUSH2 0x922 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0x1E 0xCC 0xB4 0xC4 GT DUP8 DUP4 SWAP1 ADD DUP1 SWAP2 SWAP15 COINBASE EXTCODEHASH STATICCALL 0xE4 SLOAD 0xD4 0xBE BASEFEE 0xC3 0xCC 0xDA SWAP7 SLOAD PUSH13 0x8BDF064F7A64736F6C63430008 ADDMOD STOP CALLER ",
							"sourceMap": "65:4239:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2340:1023;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;724:711;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1441:893;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3821:481;;;;;;;;;;;;;:::i;:::-;;440:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;499:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;566:152;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3369:446;;;;;;;;;;;;;:::i;:::-;;2340:1023;2590:3;2564:30;;:14;;;;;;;;;;;:30;;;;2556:39;;;;;;2860:17;;2841:6;2849:5;2830:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2820:36;;;;;;:57;2812:66;;;;;;2965:13;;2947:15;:31;2939:40;;;;;;3115:6;3099:22;;:12;;;;;;;;;;;:22;;;3095:262;;;3176:14;;;;;;;;;;;:23;;:46;3200:21;3176:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3095:262;;;3300:14;;;;;;;;;;:23;;:46;3324:21;3300:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3095:262;2340:1023;;:::o;724:711::-;998:3;971:31;;:14;;;;;;;;;;:31;;;963:40;;;;;;1120:1;1108:9;:13;1100:22;;;;;;1144:9;1132;:21;;;;1340:10;1315:14;;:36;;;;;;;;;;;;;;;;;;1424:4;1404:17;:24;;;;724:711;:::o;1441:893::-;1589:3;1563:30;;:14;;;;;;;;;;:30;;;;1555:39;;;;;;1785:3;1759:30;;:14;;;;;;;;;;;:30;;;1751:39;;;;;;1951:9;;1938;:22;1930:31;;;;;;2148:10;2123:14;;:36;;;;;;;;;;;;;;;;;;2217:6;2202:12;;:21;;;;;;;;;;;;;;;;;;2319:8;2301:15;:26;;;;:::i;:::-;2285:13;:42;;;;1441:893;:::o;3821:481::-;4065:14;;;;;;;;;;;4051:28;;:10;:28;;;4043:37;;;;;;4160:13;;4141:15;:32;;4133:41;;;;;;4249:14;;;;;;;;;;;:23;;:46;4273:21;4249:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3821:481::o;440:24::-;;;;:::o;499:41::-;;;;:::o;566:152::-;649:7;696:6;704:5;685:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;675:36;;;;;;668:43;;566:152;;;;:::o;3369:446::-;3557:14;;;;;;;;;;3543:28;;:10;:28;;;3535:37;;;;;;3677:3;3651:30;;:14;;;;;;;;;;;:30;;;3643:39;;;;;;3762:14;;;;;;;;;;:23;;:46;3786:21;3762:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3369:446::o;88:117:1:-;197:1;194;187:12;334:90;368:7;411:5;404:13;397:21;386:32;;334:90;;;:::o;430:116::-;500:21;515:5;500:21;:::i;:::-;493:5;490:32;480:60;;536:1;533;526:12;480:60;430:116;:::o;552:133::-;595:5;633:6;620:20;611:29;;649:30;673:5;649:30;:::i;:::-;552:133;;;;:::o;691:77::-;728:7;757:5;746:16;;691:77;;;:::o;774:122::-;847:24;865:5;847:24;:::i;:::-;840:5;837:35;827:63;;886:1;883;876:12;827:63;774:122;:::o;902:139::-;948:5;986:6;973:20;964:29;;1002:33;1029:5;1002:33;:::i;:::-;902:139;;;;:::o;1047:468::-;1112:6;1120;1169:2;1157:9;1148:7;1144:23;1140:32;1137:119;;;1175:79;;:::i;:::-;1137:119;1295:1;1320:50;1362:7;1353:6;1342:9;1338:22;1320:50;:::i;:::-;1310:60;;1266:114;1419:2;1445:53;1490:7;1481:6;1470:9;1466:22;1445:53;:::i;:::-;1435:63;;1390:118;1047:468;;;;;:::o;1521:77::-;1558:7;1587:5;1576:16;;1521:77;;;:::o;1604:122::-;1677:24;1695:5;1677:24;:::i;:::-;1670:5;1667:35;1657:63;;1716:1;1713;1706:12;1657:63;1604:122;:::o;1732:139::-;1778:5;1816:6;1803:20;1794:29;;1832:33;1859:5;1832:33;:::i;:::-;1732:139;;;;:::o;1877:329::-;1936:6;1985:2;1973:9;1964:7;1960:23;1956:32;1953:119;;;1991:79;;:::i;:::-;1953:119;2111:1;2136:53;2181:7;2172:6;2161:9;2157:22;2136:53;:::i;:::-;2126:63;;2082:117;1877:329;;;;:::o;2212:323::-;2268:6;2317:2;2305:9;2296:7;2292:23;2288:32;2285:119;;;2323:79;;:::i;:::-;2285:119;2443:1;2468:50;2510:7;2501:6;2490:9;2486:22;2468:50;:::i;:::-;2458:60;;2414:114;2212:323;;;;:::o;2541:118::-;2628:24;2646:5;2628:24;:::i;:::-;2623:3;2616:37;2541:118;;:::o;2665:222::-;2758:4;2796:2;2785:9;2781:18;2773:26;;2809:71;2877:1;2866:9;2862:17;2853:6;2809:71;:::i;:::-;2665:222;;;;:::o;2893:118::-;2980:24;2998:5;2980:24;:::i;:::-;2975:3;2968:37;2893:118;;:::o;3017:222::-;3110:4;3148:2;3137:9;3133:18;3125:26;;3161:71;3229:1;3218:9;3214:17;3205:6;3161:71;:::i;:::-;3017:222;;;;:::o;3245:109::-;3326:21;3341:5;3326:21;:::i;:::-;3321:3;3314:34;3245:109;;:::o;3360:320::-;3475:4;3513:2;3502:9;3498:18;3490:26;;3526:65;3588:1;3577:9;3573:17;3564:6;3526:65;:::i;:::-;3601:72;3669:2;3658:9;3654:18;3645:6;3601:72;:::i;:::-;3360:320;;;;;:::o;3686:180::-;3734:77;3731:1;3724:88;3831:4;3828:1;3821:15;3855:4;3852:1;3845:15;3872:305;3912:3;3931:20;3949:1;3931:20;:::i;:::-;3926:25;;3965:20;3983:1;3965:20;:::i;:::-;3960:25;;4119:1;4051:66;4047:74;4044:1;4041:81;4038:107;;;4125:18;;:::i;:::-;4038:107;4169:1;4166;4162:9;4155:16;;3872:305;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "505000",
								"executionCost": "71177",
								"totalCost": "576177"
							},
							"external": {
								"betAmount()": "2429",
								"betExpiration()": "2451",
								"cancel()": "infinite",
								"makeBet(bytes32)": "71088",
								"player1CommitmentHash(bool,uint256)": "infinite",
								"revealWinner(bool,uint256)": "infinite",
								"takeBet(bool)": "infinite",
								"timeOut()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 65,
									"end": 4304,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 65,
									"end": 4304,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 65,
									"end": 4304,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 150,
									"end": 153,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 108,
									"end": 154,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 108,
									"end": 154,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 108,
									"end": 154,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 108,
									"end": 154,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 108,
									"end": 154,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 108,
									"end": 154,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 108,
									"end": 154,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 108,
									"end": 154,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 108,
									"end": 154,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 108,
									"end": 154,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 108,
									"end": 154,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 108,
									"end": 154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 108,
									"end": 154,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 108,
									"end": 154,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 108,
									"end": 154,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 108,
									"end": 154,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 108,
									"end": 154,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 108,
									"end": 154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 108,
									"end": 154,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 108,
									"end": 154,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 229,
									"end": 232,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 233,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 233,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 233,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 187,
									"end": 233,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 187,
									"end": 233,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 233,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 233,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 233,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 187,
									"end": 233,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 187,
									"end": 233,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 187,
									"end": 233,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 187,
									"end": 233,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 233,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 187,
									"end": 233,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 187,
									"end": 233,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 187,
									"end": 233,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 187,
									"end": 233,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 187,
									"end": 233,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 233,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 187,
									"end": 233,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 530,
									"end": 540,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 499,
									"end": 540,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 499,
									"end": 540,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 65,
									"end": 4304,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 65,
									"end": 4304,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65,
									"end": 4304,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 65,
									"end": 4304,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 65,
									"end": 4304,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 65,
									"end": 4304,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 4304,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65,
									"end": 4304,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 65,
									"end": 4304,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 65,
									"end": 4304,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 65,
									"end": 4304,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 65,
									"end": 4304,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 4304,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65,
									"end": 4304,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 4304,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 4304,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 65,
									"end": 4304,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 4304,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fc1eccb4c4118783900180919e413ffae454d4be48c3ccda96546c8bdf064f7a64736f6c63430008080033",
									".code": [
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH",
											"source": 0,
											"value": "D24257C0"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH",
											"source": 0,
											"value": "D24257C0"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH",
											"source": 0,
											"value": "D97310AF"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH",
											"source": 0,
											"value": "EA05A57F"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH",
											"source": 0,
											"value": "EA8A1AF0"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH",
											"source": 0,
											"value": "8FB69C6"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH",
											"source": 0,
											"value": "284152DC"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH",
											"source": 0,
											"value": "38A3FDE7"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH",
											"source": 0,
											"value": "614D85E1"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4304,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3821,
											"end": 4302,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3821,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3821,
											"end": 4302,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3821,
											"end": 4302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3821,
											"end": 4302,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3821,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3821,
											"end": 4302,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3821,
											"end": 4302,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 4302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3821,
											"end": 4302,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3821,
											"end": 4302,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3821,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3821,
											"end": 4302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3821,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3821,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3821,
											"end": 4302,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3821,
											"end": 4302,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3821,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3821,
											"end": 4302,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 440,
											"end": 464,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 440,
											"end": 464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 440,
											"end": 464,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 440,
											"end": 464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 440,
											"end": 464,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 440,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 440,
											"end": 464,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 440,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 440,
											"end": 464,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 440,
											"end": 464,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 440,
											"end": 464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 440,
											"end": 464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 440,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 440,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 440,
											"end": 464,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 440,
											"end": 464,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 440,
											"end": 464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 440,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 440,
											"end": 464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 440,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 440,
											"end": 464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 440,
											"end": 464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 440,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 440,
											"end": 464,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 440,
											"end": 464,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 440,
											"end": 464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 440,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 440,
											"end": 464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 440,
											"end": 464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 440,
											"end": 464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 440,
											"end": 464,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 440,
											"end": 464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 440,
											"end": 464,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 499,
											"end": 540,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 499,
											"end": 540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 499,
											"end": 540,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 499,
											"end": 540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 499,
											"end": 540,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 499,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 499,
											"end": 540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 499,
											"end": 540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 499,
											"end": 540,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 499,
											"end": 540,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 499,
											"end": 540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 499,
											"end": 540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 499,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 499,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 499,
											"end": 540,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 540,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 499,
											"end": 540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 499,
											"end": 540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 499,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 499,
											"end": 540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 499,
											"end": 540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 499,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 499,
											"end": 540,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 540,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 499,
											"end": 540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 499,
											"end": 540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 499,
											"end": 540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 499,
											"end": 540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 499,
											"end": 540,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 499,
											"end": 540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 499,
											"end": 540,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 566,
											"end": 718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 566,
											"end": 718,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 566,
											"end": 718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 566,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 566,
											"end": 718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 566,
											"end": 718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 566,
											"end": 718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 566,
											"end": 718,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 566,
											"end": 718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 566,
											"end": 718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 566,
											"end": 718,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 566,
											"end": 718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 718,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 566,
											"end": 718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 566,
											"end": 718,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 718,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3369,
											"end": 3815,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3369,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3369,
											"end": 3815,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3369,
											"end": 3815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3369,
											"end": 3815,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3369,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3369,
											"end": 3815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3369,
											"end": 3815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3369,
											"end": 3815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3369,
											"end": 3815,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3369,
											"end": 3815,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3369,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3369,
											"end": 3815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3369,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3369,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3369,
											"end": 3815,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3369,
											"end": 3815,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3369,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3369,
											"end": 3815,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2590,
											"end": 2593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2564,
											"end": 2594,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2564,
											"end": 2594,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2564,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2564,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2564,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2564,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2594,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2564,
											"end": 2594,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2594,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2594,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2556,
											"end": 2595,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2556,
											"end": 2595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2595,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2595,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2556,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2860,
											"end": 2877,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2860,
											"end": 2877,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2847,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2854,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2855,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2830,
											"end": 2855,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2830,
											"end": 2855,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2830,
											"end": 2855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2830,
											"end": 2855,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2830,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2855,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2830,
											"end": 2855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2855,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2855,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2855,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2856,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2877,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2812,
											"end": 2878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2812,
											"end": 2878,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2812,
											"end": 2878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2812,
											"end": 2878,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2812,
											"end": 2878,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2812,
											"end": 2878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2978,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2965,
											"end": 2978,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2962,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2978,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2939,
											"end": 2979,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2979,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2979,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2979,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2939,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3111,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3099,
											"end": 3111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3111,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3111,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3099,
											"end": 3111,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3111,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3111,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3099,
											"end": 3111,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3357,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3095,
											"end": 3357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3190,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3176,
											"end": 3190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3190,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3190,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3176,
											"end": 3190,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3190,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3190,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3176,
											"end": 3190,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3199,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3176,
											"end": 3199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 3200,
											"end": 3221,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3095,
											"end": 3357,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3357,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3095,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3300,
											"end": 3314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3314,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3300,
											"end": 3314,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3314,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3300,
											"end": 3314,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3323,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3300,
											"end": 3323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 3324,
											"end": 3345,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3357,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3095,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 3363,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 1002,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 971,
											"end": 1002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 971,
											"end": 985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 971,
											"end": 985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 971,
											"end": 985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 971,
											"end": 985,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 971,
											"end": 985,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 971,
											"end": 985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 971,
											"end": 985,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 971,
											"end": 985,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 971,
											"end": 985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1002,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 971,
											"end": 1002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 971,
											"end": 1002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1117,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1121,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1100,
											"end": 1122,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1122,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1122,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1100,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1153,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1132,
											"end": 1153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1153,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1350,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1404,
											"end": 1428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1404,
											"end": 1428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1404,
											"end": 1428,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1404,
											"end": 1428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 724,
											"end": 1435,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1589,
											"end": 1592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1563,
											"end": 1593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1577,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1577,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1563,
											"end": 1577,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1577,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1577,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1563,
											"end": 1577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1563,
											"end": 1593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1593,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1555,
											"end": 1594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1594,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1594,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1555,
											"end": 1594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1789,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1759,
											"end": 1789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1789,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1759,
											"end": 1789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1789,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1751,
											"end": 1790,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 1790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1751,
											"end": 1790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 1790,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 1790,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1751,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1960,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1951,
											"end": 1960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1947,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1960,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1930,
											"end": 1961,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 1961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 1961,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 1961,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1930,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2158,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2137,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2123,
											"end": 2137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2123,
											"end": 2159,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2123,
											"end": 2159,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2159,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2123,
											"end": 2159,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2159,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2159,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2159,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2123,
											"end": 2159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2159,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2159,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2159,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2217,
											"end": 2223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2319,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2301,
											"end": 2327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2301,
											"end": 2327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2301,
											"end": 2327,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2301,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2285,
											"end": 2327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 2334,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3821,
											"end": 4302,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3821,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4079,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4065,
											"end": 4079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4079,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4079,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4065,
											"end": 4079,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4079,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4079,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4065,
											"end": 4079,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4051,
											"end": 4079,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4051,
											"end": 4079,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4051,
											"end": 4061,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4051,
											"end": 4079,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4051,
											"end": 4079,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4051,
											"end": 4079,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4043,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4043,
											"end": 4080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4043,
											"end": 4080,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4043,
											"end": 4080,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4043,
											"end": 4080,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4043,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4160,
											"end": 4173,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4160,
											"end": 4173,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4141,
											"end": 4156,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 4141,
											"end": 4173,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4141,
											"end": 4173,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4133,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4133,
											"end": 4174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4133,
											"end": 4174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4133,
											"end": 4174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4133,
											"end": 4174,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4133,
											"end": 4174,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4133,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4263,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4249,
											"end": 4263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4249,
											"end": 4263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4263,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4263,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4249,
											"end": 4263,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4263,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4263,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4249,
											"end": 4263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4272,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4249,
											"end": 4272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 4273,
											"end": 4294,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3821,
											"end": 4302,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 464,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 440,
											"end": 464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 440,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 440,
											"end": 464,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 440,
											"end": 464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 440,
											"end": 464,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 499,
											"end": 540,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 499,
											"end": 540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 499,
											"end": 540,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 499,
											"end": 540,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 499,
											"end": 540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 499,
											"end": 540,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 566,
											"end": 718,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 566,
											"end": 718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 649,
											"end": 656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 696,
											"end": 702,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 704,
											"end": 709,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 685,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 685,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 685,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 685,
											"end": 710,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 685,
											"end": 710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 685,
											"end": 710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 685,
											"end": 710,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 685,
											"end": 710,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 685,
											"end": 710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 685,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 685,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 685,
											"end": 710,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 685,
											"end": 710,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 685,
											"end": 710,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 685,
											"end": 710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 685,
											"end": 710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 685,
											"end": 710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 675,
											"end": 711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 675,
											"end": 711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 675,
											"end": 711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 675,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 675,
											"end": 711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 675,
											"end": 711,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 668,
											"end": 711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 668,
											"end": 711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 566,
											"end": 718,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3369,
											"end": 3815,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3369,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3557,
											"end": 3571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3571,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3571,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3557,
											"end": 3571,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3571,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3571,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3557,
											"end": 3571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3543,
											"end": 3571,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3543,
											"end": 3571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3543,
											"end": 3553,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3543,
											"end": 3571,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3543,
											"end": 3571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3543,
											"end": 3571,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3535,
											"end": 3572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3572,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3572,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3535,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3677,
											"end": 3680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3651,
											"end": 3681,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3651,
											"end": 3681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3651,
											"end": 3681,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3651,
											"end": 3681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3651,
											"end": 3681,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3643,
											"end": 3682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3643,
											"end": 3682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3682,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3682,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3643,
											"end": 3682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3776,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3776,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3762,
											"end": 3776,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3776,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3776,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3762,
											"end": 3776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3785,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3762,
											"end": 3785,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 3786,
											"end": 3807,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3369,
											"end": 3815,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 334,
											"end": 424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 404,
											"end": 417,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 397,
											"end": 418,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 386,
											"end": 418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 386,
											"end": 418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 430,
											"end": 546,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 430,
											"end": 546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 515,
											"end": 520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 500,
											"end": 521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 500,
											"end": 521,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 500,
											"end": 521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 493,
											"end": 498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 522,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 480,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 480,
											"end": 540,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 536,
											"end": 537,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 526,
											"end": 538,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 480,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 430,
											"end": 546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 430,
											"end": 546,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 552,
											"end": 685,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 552,
											"end": 685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 620,
											"end": 640,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 611,
											"end": 640,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 611,
											"end": 640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 649,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 673,
											"end": 678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 649,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 649,
											"end": 679,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 649,
											"end": 679,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 649,
											"end": 679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 691,
											"end": 768,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 691,
											"end": 768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 728,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 746,
											"end": 762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 746,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 768,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 691,
											"end": 768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 691,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 768,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 774,
											"end": 896,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 774,
											"end": 896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 847,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 865,
											"end": 870,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 847,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 847,
											"end": 871,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 847,
											"end": 871,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 847,
											"end": 871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 840,
											"end": 845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 837,
											"end": 872,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 827,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 827,
											"end": 890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 886,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 884,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 876,
											"end": 888,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 827,
											"end": 890,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 827,
											"end": 890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 774,
											"end": 896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 896,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 902,
											"end": 1041,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 902,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 948,
											"end": 953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 973,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 964,
											"end": 993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 964,
											"end": 993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1029,
											"end": 1034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1002,
											"end": 1035,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1002,
											"end": 1035,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1002,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 902,
											"end": 1041,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 902,
											"end": 1041,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 902,
											"end": 1041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 902,
											"end": 1041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 902,
											"end": 1041,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1047,
											"end": 1515,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1047,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1118,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1171,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1157,
											"end": 1166,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1155,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1167,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1172,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1256,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1137,
											"end": 1256,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1175,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1175,
											"end": 1254,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1175,
											"end": 1254,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1175,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1256,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1137,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1320,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1362,
											"end": 1369,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1351,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1360,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1320,
											"end": 1370,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1320,
											"end": 1370,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1320,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1370,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1421,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1445,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1490,
											"end": 1497,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1487,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1479,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1488,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1445,
											"end": 1498,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1445,
											"end": 1498,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1445,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1498,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1515,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1515,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1515,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1521,
											"end": 1598,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1521,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 1592,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1598,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1604,
											"end": 1726,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1604,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1695,
											"end": 1700,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1677,
											"end": 1701,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1677,
											"end": 1701,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1677,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1702,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1657,
											"end": 1720,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1706,
											"end": 1718,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1720,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1657,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1604,
											"end": 1726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1604,
											"end": 1726,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1732,
											"end": 1871,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1732,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 1822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1823,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1859,
											"end": 1864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1832,
											"end": 1865,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1832,
											"end": 1865,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1832,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1871,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1871,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1877,
											"end": 2206,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1877,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 1987,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1973,
											"end": 1982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1971,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1983,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 1988,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2072,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1953,
											"end": 2072,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1991,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1991,
											"end": 2070,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1991,
											"end": 2070,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1991,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2072,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1953,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2181,
											"end": 2188,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2178,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2170,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2136,
											"end": 2189,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2136,
											"end": 2189,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2136,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 2206,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 2206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 2206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 2206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 2206,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2212,
											"end": 2535,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2212,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2319,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2305,
											"end": 2314,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2303,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2292,
											"end": 2315,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2320,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2404,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2285,
											"end": 2404,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2323,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2323,
											"end": 2402,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2323,
											"end": 2402,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2323,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2404,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2285,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2510,
											"end": 2517,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2499,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2468,
											"end": 2518,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2468,
											"end": 2518,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2468,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2518,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2518,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2535,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2535,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2535,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2541,
											"end": 2659,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2541,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2646,
											"end": 2651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2628,
											"end": 2652,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2628,
											"end": 2652,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2628,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2616,
											"end": 2653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2659,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2665,
											"end": 2887,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2665,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2758,
											"end": 2762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2785,
											"end": 2794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2877,
											"end": 2878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2875,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2859,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2809,
											"end": 2880,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2809,
											"end": 2880,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2809,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2887,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2887,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2893,
											"end": 3011,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2893,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2998,
											"end": 3003,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2980,
											"end": 3004,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2980,
											"end": 3004,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2980,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 2978,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3011,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3017,
											"end": 3239,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3017,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3137,
											"end": 3146,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3161,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3229,
											"end": 3230,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3218,
											"end": 3227,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3211,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3161,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3161,
											"end": 3232,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3161,
											"end": 3232,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3161,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3239,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3239,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3239,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3245,
											"end": 3354,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3245,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3326,
											"end": 3347,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3326,
											"end": 3347,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3326,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3324,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3354,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3360,
											"end": 3680,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3360,
											"end": 3680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3502,
											"end": 3511,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3498,
											"end": 3516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3526,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3588,
											"end": 3589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3577,
											"end": 3586,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3573,
											"end": 3590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3570,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3526,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3526,
											"end": 3591,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3526,
											"end": 3591,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3526,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3601,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3669,
											"end": 3671,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3658,
											"end": 3667,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3645,
											"end": 3651,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3601,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3601,
											"end": 3673,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3601,
											"end": 3673,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3601,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3680,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3680,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3680,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3686,
											"end": 3866,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3686,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3734,
											"end": 3811,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3731,
											"end": 3732,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3724,
											"end": 3812,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3831,
											"end": 3835,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3828,
											"end": 3829,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3821,
											"end": 3836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3859,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3852,
											"end": 3853,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3860,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 4177,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3872,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3949,
											"end": 3950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3931,
											"end": 3951,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3931,
											"end": 3951,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3931,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3951,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3983,
											"end": 3984,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3965,
											"end": 3985,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3965,
											"end": 3985,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3965,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3960,
											"end": 3985,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3960,
											"end": 3985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4117,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4047,
											"end": 4121,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4044,
											"end": 4045,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4041,
											"end": 4122,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4145,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 4038,
											"end": 4145,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4145,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 4038,
											"end": 4145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4170,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4167,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4162,
											"end": 4171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4171,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 4177,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 4177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 4177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 4177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 4177,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"betAmount()": "d24257c0",
							"betExpiration()": "d97310af",
							"cancel()": "ea8a1af0",
							"makeBet(bytes32)": "284152dc",
							"player1CommitmentHash(bool,uint256)": "ea05a57f",
							"revealWinner(bool,uint256)": "08fb69c6",
							"takeBet(bool)": "38a3fde7",
							"timeOut()": "614d85e1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"betAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"betExpiration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"makeBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"choice\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"player1CommitmentHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"choice\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"revealWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"choice\",\"type\":\"bool\"}],\"name\":\"takeBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeOut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/CoinFlip.sol\":\"CoinFlip\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/CoinFlip.sol\":{\"keccak256\":\"0x89ded6517790e0cf076da6eb654d2ad79ba1ab1bdb8729a1bba0047dec90d4bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7e50a5c1e57a30aabdb94ac50fcbbf84bc870e40341cdd83729b089c85fe56f\",\"dweb:/ipfs/QmcZT24tgR879R2mahounXzdugffoGH2ShWR8DhRUhTTut\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "Contracts/CoinFlip.sol:CoinFlip",
								"label": "player1Address",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 13,
								"contract": "Contracts/CoinFlip.sol:CoinFlip",
								"label": "player2Address",
								"offset": 0,
								"slot": "1",
								"type": "t_address_payable"
							},
							{
								"astId": 15,
								"contract": "Contracts/CoinFlip.sol:CoinFlip",
								"label": "player1Commitment",
								"offset": 0,
								"slot": "2",
								"type": "t_bytes32"
							},
							{
								"astId": 17,
								"contract": "Contracts/CoinFlip.sol:CoinFlip",
								"label": "player2Guess",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 19,
								"contract": "Contracts/CoinFlip.sol:CoinFlip",
								"label": "betAmount",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 26,
								"contract": "Contracts/CoinFlip.sol:CoinFlip",
								"label": "betExpiration",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Contracts/CoinFlip.sol": {
				"ast": {
					"absolutePath": "Contracts/CoinFlip.sol",
					"exportedSymbols": {
						"CoinFlip": [
							254
						]
					},
					"id": 255,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 254,
							"linearizedBaseContracts": [
								254
							],
							"name": "CoinFlip",
							"nameLocation": "74:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "player1Address",
									"nameLocation": "124:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "108:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "108:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830",
												"id": 5,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "150:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0x0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 4,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "141:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 3,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "141:9:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "141:13:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 13,
									"mutability": "mutable",
									"name": "player2Address",
									"nameLocation": "203:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "187:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 8,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "187:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830",
												"id": 11,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "229:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0x0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 10,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "220:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 9,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "220:9:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "220:13:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "player1Commitment",
									"nameLocation": "275:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "267:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 14,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "267:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 17,
									"mutability": "mutable",
									"name": "player2Guess",
									"nameLocation": "355:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "350:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 16,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "350:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "d24257c0",
									"id": 19,
									"mutability": "mutable",
									"name": "betAmount",
									"nameLocation": "455:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "440:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "440:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d97310af",
									"id": 26,
									"mutability": "mutable",
									"name": "betExpiration",
									"nameLocation": "514:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "499:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 20,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "499:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9935"
										},
										"id": 25,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 1157...(70 digits omitted)...9936"
											},
											"id": 23,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "32",
												"id": 21,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "530:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "323536",
												"id": 22,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "533:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_256_by_1",
													"typeString": "int_const 256"
												},
												"value": "256"
											},
											"src": "530:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 1157...(70 digits omitted)...9936"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 24,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "539:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "530:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9935"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "658:60:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 38,
																	"name": "choice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "696:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 39,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "704:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 36,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "685:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "685:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "685:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 35,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "675:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "675:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 34,
												"id": 42,
												"nodeType": "Return",
												"src": "668:43:0"
											}
										]
									},
									"functionSelector": "ea05a57f",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "player1CommitmentHash",
									"nameLocation": "575:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "choice",
												"nameLocation": "603:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "598:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 27,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "598:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "619:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "611:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "597:28:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "649:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "648:9:0"
									},
									"scope": 254,
									"src": "566:152:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "773:662:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 50,
																"name": "player1Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "971:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 53,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "998:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "989:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 51,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "989:9:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "989:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "971:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 49,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "963:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "963:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "963:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 59,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1108:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1108:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1108:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 58,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1100:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1100:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "1100:22:0"
											},
											{
												"expression": {
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 65,
														"name": "betAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1132:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 66,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1144:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1144:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1132:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "1132:21:0"
											},
											{
												"expression": {
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 70,
														"name": "player1Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1315:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 73,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1340:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1340:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1332:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 71,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1332:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1332:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1315:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1315:36:0"
											},
											{
												"expression": {
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 78,
														"name": "player1Commitment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1404:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 79,
														"name": "hash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "1424:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1404:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "1404:24:0"
											}
										]
									},
									"functionSelector": "284152dc",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "makeBet",
									"nameLocation": "733:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "750:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "742:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 45,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "741:14:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:0:0"
									},
									"scope": 254,
									"src": "724:711:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "1489:845:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 89,
																"name": "player1Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "1563:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1589:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1581:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1581:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1581:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1563:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1555:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1555:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "1555:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "player2Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "1759:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1785:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1777:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 99,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1777:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1777:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1759:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 97,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1751:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1751:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "1751:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 107,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1938:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1938:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 109,
																"name": "betAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1951:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1938:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1930:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1930:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "1930:31:0"
											},
											{
												"expression": {
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 113,
														"name": "player2Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2123:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 116,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2148:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2148:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2140:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 114,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2140:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2140:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2123:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "2123:36:0"
											},
											{
												"expression": {
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 121,
														"name": "player2Guess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "2202:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 122,
														"name": "choice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "2217:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2202:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2202:21:0"
											},
											{
												"expression": {
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 125,
														"name": "betExpiration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "2285:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 126,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2301:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2301:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3234",
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2319:8:0",
															"subdenomination": "hours",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "24"
														},
														"src": "2301:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2285:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2285:42:0"
											}
										]
									},
									"functionSelector": "38a3fde7",
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "takeBet",
									"nameLocation": "1450:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "choice",
												"nameLocation": "1464:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "1459:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 84,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1459:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:13:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1489:0:0"
									},
									"scope": 254,
									"src": "1441:893:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "2400:963:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 141,
																"name": "player2Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "2564:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2590:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2582:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 142,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2582:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2582:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2564:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2556:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2556:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "2556:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 153,
																				"name": "choice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 135,
																				"src": "2841:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			{
																				"id": 154,
																				"name": "nonce",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 137,
																				"src": "2849:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 151,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "2830:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encode",
																			"nodeType": "MemberAccess",
																			"src": "2830:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2830:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 150,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "2820:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2820:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 157,
																"name": "player1Commitment",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "2860:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "2820:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2812:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2812:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "2812:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 162,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2947:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2947:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 164,
																"name": "betExpiration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2965:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2947:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2939:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2939:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "2939:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 168,
														"name": "player2Guess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "3099:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 169,
														"name": "choice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "3115:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3099:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 192,
													"nodeType": "Block",
													"src": "3247:110:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 187,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3332:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_CoinFlip_$254",
																						"typeString": "contract CoinFlip"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_CoinFlip_$254",
																						"typeString": "contract CoinFlip"
																					}
																				],
																				"id": 186,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3324:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 185,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3324:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3324:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3324:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 182,
																		"name": "player1Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 7,
																		"src": "3300:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "3300:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3300:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 191,
															"nodeType": "ExpressionStatement",
															"src": "3300:46:0"
														}
													]
												},
												"id": 193,
												"nodeType": "IfStatement",
												"src": "3095:262:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "3123:110:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 176,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3208:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_CoinFlip_$254",
																						"typeString": "contract CoinFlip"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_CoinFlip_$254",
																						"typeString": "contract CoinFlip"
																					}
																				],
																				"id": 175,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3200:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 174,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3200:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3200:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3200:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 171,
																		"name": "player2Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 13,
																		"src": "3176:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "3176:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3176:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 180,
															"nodeType": "ExpressionStatement",
															"src": "3176:46:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "08fb69c6",
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revealWinner",
									"nameLocation": "2349:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "choice",
												"nameLocation": "2368:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2363:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2363:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "2384:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2376:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2376:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2362:28:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2400:0:0"
									},
									"scope": 254,
									"src": "2340:1023:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "3397:418:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 199,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3543:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3543:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 201,
																"name": "player1Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "3557:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3543:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 198,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3535:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3535:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "3535:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 206,
																"name": "player2Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "3651:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3677:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3669:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 207,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3669:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3669:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3651:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 205,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3643:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3643:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "3643:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 219,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3794:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CoinFlip_$254",
																			"typeString": "contract CoinFlip"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CoinFlip_$254",
																			"typeString": "contract CoinFlip"
																		}
																	],
																	"id": 218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3786:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 217,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3786:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3786:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "3786:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 214,
															"name": "player1Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "3762:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3762:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3762:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "3762:46:0"
											}
										]
									},
									"functionSelector": "ea8a1af0",
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cancel",
									"nameLocation": "3378:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3385:2:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3397:0:0"
									},
									"scope": 254,
									"src": "3369:446:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "3850:452:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 229,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4051:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4051:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 231,
																"name": "player2Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "4065:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4051:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4043:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4043:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "4043:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 236,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4141:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4141:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 238,
																"name": "betExpiration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "4160:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4141:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4133:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4133:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "4133:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 247,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4281:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CoinFlip_$254",
																			"typeString": "contract CoinFlip"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CoinFlip_$254",
																			"typeString": "contract CoinFlip"
																		}
																	],
																	"id": 246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4273:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 245,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4273:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4273:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "4273:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 242,
															"name": "player2Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "4249:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4249:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4249:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "4249:46:0"
											}
										]
									},
									"functionSelector": "614d85e1",
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "timeOut",
									"nameLocation": "3830:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3838:2:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3850:0:0"
									},
									"scope": 254,
									"src": "3821:481:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 255,
							"src": "65:4239:0",
							"usedErrors": []
						}
					],
					"src": "32:4272:0"
				},
				"id": 0
			}
		}
	}
}