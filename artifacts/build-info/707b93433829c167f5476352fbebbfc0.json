{
	"id": "707b93433829c167f5476352fbebbfc0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contracts/CoinFlip.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\n\ncontract CoinFlip {\n\n    // Variables\n\n    // address payable playerAddress;\n    address payable player1Address = payable (0x0); // player address variable\n    address payable player2Address = payable (0x0); // player address variable\n\n    bytes32 player1Commitment; // player 1 flips coin, true = heads, false = tails\n    bool player2Guess; // player 2 guesses which outcome player 1 has, ie. true or false\n\n    uint256 public betAmount; // how much has player 1 bet\n    uint256 public betExpiration = 2**256 - 1;\n\n\n    // Functions\n\n    function player1CommitmentHash (bool choice, uint256 nonce) external pure returns (bytes32) {\n        return keccak256(abi.encode(choice, nonce));\n    }\n\n    function makeBet (bytes32 hash) external payable {\n        // ensure that player 1 hasn't already made a bet yet,\n        // ie. player1's address should at this point still be the initial value, 0\n        // WHY DOES THIS MATTER?\n        require(player1Address == payable (0x0));\n        // ensure that player1 has provided a bet value and store it as the bet amount\n        require(msg.value > 0);\n        betAmount = msg.value;\n        // update and store player1's address, ie. update the address to the address from\n        // which the function is being called to make the bet\n        player1Address = payable(msg.sender);\n        // store player1's commitment hash\n        player1Commitment = hash;\n    }\n\n    function takeBet (bool choice) external payable {\n        // ensure that player 1has now placed their bet\n        require(player1Address != payable(0x0));\n        // ensure that player 2 has not yet accepted the bet, ie. player1's address should \n        // at this point still be the initial value, 0\n        require(player2Address == payable(0x0));\n        // ensure that the value provided by player 2 when taking the bet via this\n        // function is equal to the bet amount\n        require(msg.value == betAmount);\n        // update and store player2's address, ie. update the address to the address from\n        // which the function is being called to take the bet\n        player2Address = payable(msg.sender);\n        // store player2's guess\n        player2Guess = choice;\n        // update and store the bet expiration time\n        betExpiration = block.timestamp + 24 hours;\n    }\n\n    function revealWinner (bool choice, uint256 nonce) external {\n        // ensure that player 2 has accepted the bet - player 1 should not reveal their\n        // bet choice if player 2 has not accepted it yet\n        require(player2Address != payable(0x0));\n        // player 1 provides the input to this function - they reveal their bet so that\n        // the winner can be determined - ensure that the input, when hashed, matches \n        // player1's commitment\n        require(keccak256(abi.encode(choice, nonce)) == player1Commitment);\n        // ensure that the bet has not expired yet\n        require(block.timestamp < betExpiration);\n        // determine the winner and transfer the value stored in the contract to their\n        // address\n        if (player2Guess == choice) {\n            // player 2 wins, pay them\n            player2Address.transfer(address(this).balance);\n        }\n        else {\n            // player 1 wins, pay them\n            player1Address.transfer(address(this).balance);\n        }\n    }\n\n    function cancel () external {\n        // Allow player 1 to cancel the bet if it has not been accepted\n        // ensure that only player 1 can cancel the bet\n        require(msg.sender == player1Address);\n        // ensure that player 2 has not yet accepted the bet\n        require(player2Address == payable(0x0));\n        // transfer the value stored in the contract back to player 1\n        player1Address.transfer(address(this).balance);\n    }\n\n    function timeOut () external {\n        // Allow player 2 to win by default if player 1 has not revealed their bet by the \n        // time the bet expires\n        // ensure that only player 2 can call this function\n        require(msg.sender == player2Address);\n        // ensure that the bet has expired\n        require(block.timestamp >= betExpiration);\n        // transfer the value stored in the contract to player 2\n        player2Address.transfer(address(this).balance);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Contracts/CoinFlip.sol": {
				"CoinFlip": {
					"abi": [
						{
							"inputs": [],
							"name": "betAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "betExpiration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cancel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								}
							],
							"name": "makeBet",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "choice",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								}
							],
							"name": "player1CommitmentHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "choice",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								}
							],
							"name": "revealWinner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "choice",
									"type": "bool"
								}
							],
							"name": "takeBet",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "timeOut",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/CoinFlip.sol\":65:4342  contract CoinFlip {... */\n  mstore(0x40, 0x80)\n    /* \"Contracts/CoinFlip.sol\":188:191  0x0 */\n  0x00\n    /* \"Contracts/CoinFlip.sol\":146:192  address payable player1Address = payable (0x0) */\n  dup1\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Contracts/CoinFlip.sol\":267:270  0x0 */\n  0x00\n    /* \"Contracts/CoinFlip.sol\":225:271  address payable player2Address = payable (0x0) */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Contracts/CoinFlip.sol\":568:578  2**256 - 1 */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"Contracts/CoinFlip.sol\":537:578  uint256 public betExpiration = 2**256 - 1 */\n  0x05\n  sstore\n    /* \"Contracts/CoinFlip.sol\":65:4342  contract CoinFlip {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/CoinFlip.sol\":65:4342  contract CoinFlip {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd24257c0\n      gt\n      tag_10\n      jumpi\n      dup1\n      0xd24257c0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd97310af\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xea05a57f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xea8a1af0\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_10:\n      dup1\n      0x08fb69c6\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x284152dc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x38a3fde7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x614d85e1\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Contracts/CoinFlip.sol\":2378:3401  function revealWinner (bool choice, uint256 nonce) external {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"Contracts/CoinFlip.sol\":762:1473  function makeBet (bytes32 hash) external payable {... */\n    tag_3:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"Contracts/CoinFlip.sol\":1479:2372  function takeBet (bool choice) external payable {... */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"Contracts/CoinFlip.sol\":3859:4340  function timeOut () external {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      stop\n        /* \"Contracts/CoinFlip.sol\":478:502  uint256 public betAmount */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/CoinFlip.sol\":537:578  uint256 public betExpiration = 2**256 - 1 */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/CoinFlip.sol\":604:756  function player1CommitmentHash (bool choice, uint256 nonce) external pure returns (bytes32) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/CoinFlip.sol\":3407:3853  function cancel () external {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      stop\n        /* \"Contracts/CoinFlip.sol\":2378:3401  function revealWinner (bool choice, uint256 nonce) external {... */\n    tag_15:\n        /* \"Contracts/CoinFlip.sol\":2628:2631  0x0 */\n      0x00\n        /* \"Contracts/CoinFlip.sol\":2602:2632  player2Address != payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":2602:2616  player2Address */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":2602:2632  player2Address != payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Contracts/CoinFlip.sol\":2594:2633  require(player2Address != payable(0x0)) */\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n        /* \"Contracts/CoinFlip.sol\":2898:2915  player1Commitment */\n      sload(0x02)\n        /* \"Contracts/CoinFlip.sol\":2879:2885  choice */\n      dup3\n        /* \"Contracts/CoinFlip.sol\":2887:2892  nonce */\n      dup3\n        /* \"Contracts/CoinFlip.sol\":2868:2893  abi.encode(choice, nonce) */\n      add(0x20, mload(0x40))\n      tag_47\n      swap3\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Contracts/CoinFlip.sol\":2858:2894  keccak256(abi.encode(choice, nonce)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Contracts/CoinFlip.sol\":2858:2915  keccak256(abi.encode(choice, nonce)) == player1Commitment */\n      eq\n        /* \"Contracts/CoinFlip.sol\":2850:2916  require(keccak256(abi.encode(choice, nonce)) == player1Commitment) */\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n        /* \"Contracts/CoinFlip.sol\":3003:3016  betExpiration */\n      sload(0x05)\n        /* \"Contracts/CoinFlip.sol\":2985:3000  block.timestamp */\n      timestamp\n        /* \"Contracts/CoinFlip.sol\":2985:3016  block.timestamp < betExpiration */\n      lt\n        /* \"Contracts/CoinFlip.sol\":2977:3017  require(block.timestamp < betExpiration) */\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n        /* \"Contracts/CoinFlip.sol\":3153:3159  choice */\n      dup2\n        /* \"Contracts/CoinFlip.sol\":3137:3159  player2Guess == choice */\n      iszero\n      iszero\n        /* \"Contracts/CoinFlip.sol\":3137:3149  player2Guess */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Contracts/CoinFlip.sol\":3137:3159  player2Guess == choice */\n      iszero\n      iszero\n      sub\n        /* \"Contracts/CoinFlip.sol\":3133:3395  if (player2Guess == choice) {... */\n      tag_51\n      jumpi\n        /* \"Contracts/CoinFlip.sol\":3214:3228  player2Address */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":3214:3237  player2Address.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":3214:3260  player2Address.transfer(address(this).balance) */\n      0x08fc\n        /* \"Contracts/CoinFlip.sol\":3238:3259  address(this).balance */\n      selfbalance\n        /* \"Contracts/CoinFlip.sol\":3214:3260  player2Address.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_53\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_53:\n      pop\n        /* \"Contracts/CoinFlip.sol\":3133:3395  if (player2Guess == choice) {... */\n      jump(tag_54)\n    tag_51:\n        /* \"Contracts/CoinFlip.sol\":3338:3352  player1Address */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":3338:3361  player1Address.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":3338:3384  player1Address.transfer(address(this).balance) */\n      0x08fc\n        /* \"Contracts/CoinFlip.sol\":3362:3383  address(this).balance */\n      selfbalance\n        /* \"Contracts/CoinFlip.sol\":3338:3384  player1Address.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_56\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_56:\n      pop\n        /* \"Contracts/CoinFlip.sol\":3133:3395  if (player2Guess == choice) {... */\n    tag_54:\n        /* \"Contracts/CoinFlip.sol\":2378:3401  function revealWinner (bool choice, uint256 nonce) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/CoinFlip.sol\":762:1473  function makeBet (bytes32 hash) external payable {... */\n    tag_19:\n        /* \"Contracts/CoinFlip.sol\":1036:1039  0x0 */\n      0x00\n        /* \"Contracts/CoinFlip.sol\":1009:1040  player1Address == payable (0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":1009:1023  player1Address */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":1009:1040  player1Address == payable (0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Contracts/CoinFlip.sol\":1001:1041  require(player1Address == payable (0x0)) */\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n        /* \"Contracts/CoinFlip.sol\":1158:1159  0 */\n      0x00\n        /* \"Contracts/CoinFlip.sol\":1146:1155  msg.value */\n      callvalue\n        /* \"Contracts/CoinFlip.sol\":1146:1159  msg.value > 0 */\n      gt\n        /* \"Contracts/CoinFlip.sol\":1138:1160  require(msg.value > 0) */\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n        /* \"Contracts/CoinFlip.sol\":1182:1191  msg.value */\n      callvalue\n        /* \"Contracts/CoinFlip.sol\":1170:1179  betAmount */\n      0x04\n        /* \"Contracts/CoinFlip.sol\":1170:1191  betAmount = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Contracts/CoinFlip.sol\":1378:1388  msg.sender */\n      caller\n        /* \"Contracts/CoinFlip.sol\":1353:1367  player1Address */\n      0x00\n      dup1\n        /* \"Contracts/CoinFlip.sol\":1353:1389  player1Address = payable(msg.sender) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Contracts/CoinFlip.sol\":1462:1466  hash */\n      dup1\n        /* \"Contracts/CoinFlip.sol\":1442:1459  player1Commitment */\n      0x02\n        /* \"Contracts/CoinFlip.sol\":1442:1466  player1Commitment = hash */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Contracts/CoinFlip.sol\":762:1473  function makeBet (bytes32 hash) external payable {... */\n      pop\n      jump\t// out\n        /* \"Contracts/CoinFlip.sol\":1479:2372  function takeBet (bool choice) external payable {... */\n    tag_23:\n        /* \"Contracts/CoinFlip.sol\":1627:1630  0x0 */\n      0x00\n        /* \"Contracts/CoinFlip.sol\":1601:1631  player1Address != payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":1601:1615  player1Address */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":1601:1631  player1Address != payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Contracts/CoinFlip.sol\":1593:1632  require(player1Address != payable(0x0)) */\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n        /* \"Contracts/CoinFlip.sol\":1823:1826  0x0 */\n      0x00\n        /* \"Contracts/CoinFlip.sol\":1797:1827  player2Address == payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":1797:1811  player2Address */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":1797:1827  player2Address == payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Contracts/CoinFlip.sol\":1789:1828  require(player2Address == payable(0x0)) */\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n        /* \"Contracts/CoinFlip.sol\":1989:1998  betAmount */\n      sload(0x04)\n        /* \"Contracts/CoinFlip.sol\":1976:1985  msg.value */\n      callvalue\n        /* \"Contracts/CoinFlip.sol\":1976:1998  msg.value == betAmount */\n      eq\n        /* \"Contracts/CoinFlip.sol\":1968:1999  require(msg.value == betAmount) */\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n        /* \"Contracts/CoinFlip.sol\":2186:2196  msg.sender */\n      caller\n        /* \"Contracts/CoinFlip.sol\":2161:2175  player2Address */\n      0x01\n      0x00\n        /* \"Contracts/CoinFlip.sol\":2161:2197  player2Address = payable(msg.sender) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Contracts/CoinFlip.sol\":2255:2261  choice */\n      dup1\n        /* \"Contracts/CoinFlip.sol\":2240:2252  player2Guess */\n      0x03\n      0x00\n        /* \"Contracts/CoinFlip.sol\":2240:2261  player2Guess = choice */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Contracts/CoinFlip.sol\":2357:2365  24 hours */\n      0x015180\n        /* \"Contracts/CoinFlip.sol\":2339:2354  block.timestamp */\n      timestamp\n        /* \"Contracts/CoinFlip.sol\":2339:2365  block.timestamp + 24 hours */\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"Contracts/CoinFlip.sol\":2323:2336  betExpiration */\n      0x05\n        /* \"Contracts/CoinFlip.sol\":2323:2365  betExpiration = block.timestamp + 24 hours */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Contracts/CoinFlip.sol\":1479:2372  function takeBet (bool choice) external payable {... */\n      pop\n      jump\t// out\n        /* \"Contracts/CoinFlip.sol\":3859:4340  function timeOut () external {... */\n    tag_26:\n        /* \"Contracts/CoinFlip.sol\":4103:4117  player2Address */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":4089:4117  msg.sender == player2Address */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":4089:4099  msg.sender */\n      caller\n        /* \"Contracts/CoinFlip.sol\":4089:4117  msg.sender == player2Address */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Contracts/CoinFlip.sol\":4081:4118  require(msg.sender == player2Address) */\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n        /* \"Contracts/CoinFlip.sol\":4198:4211  betExpiration */\n      sload(0x05)\n        /* \"Contracts/CoinFlip.sol\":4179:4194  block.timestamp */\n      timestamp\n        /* \"Contracts/CoinFlip.sol\":4179:4211  block.timestamp >= betExpiration */\n      lt\n      iszero\n        /* \"Contracts/CoinFlip.sol\":4171:4212  require(block.timestamp >= betExpiration) */\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n        /* \"Contracts/CoinFlip.sol\":4287:4301  player2Address */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":4287:4310  player2Address.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":4287:4333  player2Address.transfer(address(this).balance) */\n      0x08fc\n        /* \"Contracts/CoinFlip.sol\":4311:4332  address(this).balance */\n      selfbalance\n        /* \"Contracts/CoinFlip.sol\":4287:4333  player2Address.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n        /* \"Contracts/CoinFlip.sol\":3859:4340  function timeOut () external {... */\n      jump\t// out\n        /* \"Contracts/CoinFlip.sol\":478:502  uint256 public betAmount */\n    tag_29:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"Contracts/CoinFlip.sol\":537:578  uint256 public betExpiration = 2**256 - 1 */\n    tag_34:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"Contracts/CoinFlip.sol\":604:756  function player1CommitmentHash (bool choice, uint256 nonce) external pure returns (bytes32) {... */\n    tag_39:\n        /* \"Contracts/CoinFlip.sol\":687:694  bytes32 */\n      0x00\n        /* \"Contracts/CoinFlip.sol\":734:740  choice */\n      dup3\n        /* \"Contracts/CoinFlip.sol\":742:747  nonce */\n      dup3\n        /* \"Contracts/CoinFlip.sol\":723:748  abi.encode(choice, nonce) */\n      add(0x20, mload(0x40))\n      tag_72\n      swap3\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Contracts/CoinFlip.sol\":713:749  keccak256(abi.encode(choice, nonce)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Contracts/CoinFlip.sol\":706:749  return keccak256(abi.encode(choice, nonce)) */\n      swap1\n      pop\n        /* \"Contracts/CoinFlip.sol\":604:756  function player1CommitmentHash (bool choice, uint256 nonce) external pure returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/CoinFlip.sol\":3407:3853  function cancel () external {... */\n    tag_44:\n        /* \"Contracts/CoinFlip.sol\":3595:3609  player1Address */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":3581:3609  msg.sender == player1Address */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":3581:3591  msg.sender */\n      caller\n        /* \"Contracts/CoinFlip.sol\":3581:3609  msg.sender == player1Address */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Contracts/CoinFlip.sol\":3573:3610  require(msg.sender == player1Address) */\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n        /* \"Contracts/CoinFlip.sol\":3715:3718  0x0 */\n      0x00\n        /* \"Contracts/CoinFlip.sol\":3689:3719  player2Address == payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":3689:3703  player2Address */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":3689:3719  player2Address == payable(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Contracts/CoinFlip.sol\":3681:3720  require(player2Address == payable(0x0)) */\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n        /* \"Contracts/CoinFlip.sol\":3800:3814  player1Address */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":3800:3823  player1Address.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/CoinFlip.sol\":3800:3846  player1Address.transfer(address(this).balance) */\n      0x08fc\n        /* \"Contracts/CoinFlip.sol\":3824:3845  address(this).balance */\n      selfbalance\n        /* \"Contracts/CoinFlip.sol\":3800:3846  player1Address.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_77:\n      pop\n        /* \"Contracts/CoinFlip.sol\":3407:3853  function cancel () external {... */\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_79:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:424   */\n    tag_81:\n        /* \"#utility.yul\":368:375   */\n      0x00\n        /* \"#utility.yul\":411:416   */\n      dup2\n        /* \"#utility.yul\":404:417   */\n      iszero\n        /* \"#utility.yul\":397:418   */\n      iszero\n        /* \"#utility.yul\":386:418   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":430:546   */\n    tag_82:\n        /* \"#utility.yul\":500:521   */\n      tag_100\n        /* \"#utility.yul\":515:520   */\n      dup2\n        /* \"#utility.yul\":500:521   */\n      tag_81\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":493:498   */\n      dup2\n        /* \"#utility.yul\":490:522   */\n      eq\n        /* \"#utility.yul\":480:540   */\n      tag_101\n      jumpi\n        /* \"#utility.yul\":536:537   */\n      0x00\n        /* \"#utility.yul\":533:534   */\n      dup1\n        /* \"#utility.yul\":526:538   */\n      revert\n        /* \"#utility.yul\":480:540   */\n    tag_101:\n        /* \"#utility.yul\":430:546   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":552:685   */\n    tag_83:\n        /* \"#utility.yul\":595:600   */\n      0x00\n        /* \"#utility.yul\":633:639   */\n      dup2\n        /* \"#utility.yul\":620:640   */\n      calldataload\n        /* \"#utility.yul\":611:640   */\n      swap1\n      pop\n        /* \"#utility.yul\":649:679   */\n      tag_103\n        /* \"#utility.yul\":673:678   */\n      dup2\n        /* \"#utility.yul\":649:679   */\n      tag_82\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":552:685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":691:768   */\n    tag_84:\n        /* \"#utility.yul\":728:735   */\n      0x00\n        /* \"#utility.yul\":757:762   */\n      dup2\n        /* \"#utility.yul\":746:762   */\n      swap1\n      pop\n        /* \"#utility.yul\":691:768   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":774:896   */\n    tag_85:\n        /* \"#utility.yul\":847:871   */\n      tag_106\n        /* \"#utility.yul\":865:870   */\n      dup2\n        /* \"#utility.yul\":847:871   */\n      tag_84\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":840:845   */\n      dup2\n        /* \"#utility.yul\":837:872   */\n      eq\n        /* \"#utility.yul\":827:890   */\n      tag_107\n      jumpi\n        /* \"#utility.yul\":886:887   */\n      0x00\n        /* \"#utility.yul\":883:884   */\n      dup1\n        /* \"#utility.yul\":876:888   */\n      revert\n        /* \"#utility.yul\":827:890   */\n    tag_107:\n        /* \"#utility.yul\":774:896   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":902:1041   */\n    tag_86:\n        /* \"#utility.yul\":948:953   */\n      0x00\n        /* \"#utility.yul\":986:992   */\n      dup2\n        /* \"#utility.yul\":973:993   */\n      calldataload\n        /* \"#utility.yul\":964:993   */\n      swap1\n      pop\n        /* \"#utility.yul\":1002:1035   */\n      tag_109\n        /* \"#utility.yul\":1029:1034   */\n      dup2\n        /* \"#utility.yul\":1002:1035   */\n      tag_85\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":902:1041   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1047:1515   */\n    tag_14:\n        /* \"#utility.yul\":1112:1118   */\n      0x00\n        /* \"#utility.yul\":1120:1126   */\n      dup1\n        /* \"#utility.yul\":1169:1171   */\n      0x40\n        /* \"#utility.yul\":1157:1166   */\n      dup4\n        /* \"#utility.yul\":1148:1155   */\n      dup6\n        /* \"#utility.yul\":1144:1167   */\n      sub\n        /* \"#utility.yul\":1140:1172   */\n      slt\n        /* \"#utility.yul\":1137:1256   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":1175:1254   */\n      tag_112\n      tag_79\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1137:1256   */\n    tag_111:\n        /* \"#utility.yul\":1295:1296   */\n      0x00\n        /* \"#utility.yul\":1320:1370   */\n      tag_113\n        /* \"#utility.yul\":1362:1369   */\n      dup6\n        /* \"#utility.yul\":1353:1359   */\n      dup3\n        /* \"#utility.yul\":1342:1351   */\n      dup7\n        /* \"#utility.yul\":1338:1360   */\n      add\n        /* \"#utility.yul\":1320:1370   */\n      tag_83\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":1310:1370   */\n      swap3\n      pop\n        /* \"#utility.yul\":1266:1380   */\n      pop\n        /* \"#utility.yul\":1419:1421   */\n      0x20\n        /* \"#utility.yul\":1445:1498   */\n      tag_114\n        /* \"#utility.yul\":1490:1497   */\n      dup6\n        /* \"#utility.yul\":1481:1487   */\n      dup3\n        /* \"#utility.yul\":1470:1479   */\n      dup7\n        /* \"#utility.yul\":1466:1488   */\n      add\n        /* \"#utility.yul\":1445:1498   */\n      tag_86\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":1435:1498   */\n      swap2\n      pop\n        /* \"#utility.yul\":1390:1508   */\n      pop\n        /* \"#utility.yul\":1047:1515   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1521:1598   */\n    tag_87:\n        /* \"#utility.yul\":1558:1565   */\n      0x00\n        /* \"#utility.yul\":1587:1592   */\n      dup2\n        /* \"#utility.yul\":1576:1592   */\n      swap1\n      pop\n        /* \"#utility.yul\":1521:1598   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1604:1726   */\n    tag_88:\n        /* \"#utility.yul\":1677:1701   */\n      tag_117\n        /* \"#utility.yul\":1695:1700   */\n      dup2\n        /* \"#utility.yul\":1677:1701   */\n      tag_87\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1670:1675   */\n      dup2\n        /* \"#utility.yul\":1667:1702   */\n      eq\n        /* \"#utility.yul\":1657:1720   */\n      tag_118\n      jumpi\n        /* \"#utility.yul\":1716:1717   */\n      0x00\n        /* \"#utility.yul\":1713:1714   */\n      dup1\n        /* \"#utility.yul\":1706:1718   */\n      revert\n        /* \"#utility.yul\":1657:1720   */\n    tag_118:\n        /* \"#utility.yul\":1604:1726   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1732:1871   */\n    tag_89:\n        /* \"#utility.yul\":1778:1783   */\n      0x00\n        /* \"#utility.yul\":1816:1822   */\n      dup2\n        /* \"#utility.yul\":1803:1823   */\n      calldataload\n        /* \"#utility.yul\":1794:1823   */\n      swap1\n      pop\n        /* \"#utility.yul\":1832:1865   */\n      tag_120\n        /* \"#utility.yul\":1859:1864   */\n      dup2\n        /* \"#utility.yul\":1832:1865   */\n      tag_88\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1732:1871   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1877:2206   */\n    tag_18:\n        /* \"#utility.yul\":1936:1942   */\n      0x00\n        /* \"#utility.yul\":1985:1987   */\n      0x20\n        /* \"#utility.yul\":1973:1982   */\n      dup3\n        /* \"#utility.yul\":1964:1971   */\n      dup5\n        /* \"#utility.yul\":1960:1983   */\n      sub\n        /* \"#utility.yul\":1956:1988   */\n      slt\n        /* \"#utility.yul\":1953:2072   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":1991:2070   */\n      tag_123\n      tag_79\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":1953:2072   */\n    tag_122:\n        /* \"#utility.yul\":2111:2112   */\n      0x00\n        /* \"#utility.yul\":2136:2189   */\n      tag_124\n        /* \"#utility.yul\":2181:2188   */\n      dup5\n        /* \"#utility.yul\":2172:2178   */\n      dup3\n        /* \"#utility.yul\":2161:2170   */\n      dup6\n        /* \"#utility.yul\":2157:2179   */\n      add\n        /* \"#utility.yul\":2136:2189   */\n      tag_89\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2126:2189   */\n      swap2\n      pop\n        /* \"#utility.yul\":2082:2199   */\n      pop\n        /* \"#utility.yul\":1877:2206   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2212:2535   */\n    tag_22:\n        /* \"#utility.yul\":2268:2274   */\n      0x00\n        /* \"#utility.yul\":2317:2319   */\n      0x20\n        /* \"#utility.yul\":2305:2314   */\n      dup3\n        /* \"#utility.yul\":2296:2303   */\n      dup5\n        /* \"#utility.yul\":2292:2315   */\n      sub\n        /* \"#utility.yul\":2288:2320   */\n      slt\n        /* \"#utility.yul\":2285:2404   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":2323:2402   */\n      tag_127\n      tag_79\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2285:2404   */\n    tag_126:\n        /* \"#utility.yul\":2443:2444   */\n      0x00\n        /* \"#utility.yul\":2468:2518   */\n      tag_128\n        /* \"#utility.yul\":2510:2517   */\n      dup5\n        /* \"#utility.yul\":2501:2507   */\n      dup3\n        /* \"#utility.yul\":2490:2499   */\n      dup6\n        /* \"#utility.yul\":2486:2508   */\n      add\n        /* \"#utility.yul\":2468:2518   */\n      tag_83\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":2458:2518   */\n      swap2\n      pop\n        /* \"#utility.yul\":2414:2528   */\n      pop\n        /* \"#utility.yul\":2212:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2659   */\n    tag_90:\n        /* \"#utility.yul\":2628:2652   */\n      tag_130\n        /* \"#utility.yul\":2646:2651   */\n      dup2\n        /* \"#utility.yul\":2628:2652   */\n      tag_84\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2623:2626   */\n      dup3\n        /* \"#utility.yul\":2616:2653   */\n      mstore\n        /* \"#utility.yul\":2541:2659   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2665:2887   */\n    tag_31:\n        /* \"#utility.yul\":2758:2762   */\n      0x00\n        /* \"#utility.yul\":2796:2798   */\n      0x20\n        /* \"#utility.yul\":2785:2794   */\n      dup3\n        /* \"#utility.yul\":2781:2799   */\n      add\n        /* \"#utility.yul\":2773:2799   */\n      swap1\n      pop\n        /* \"#utility.yul\":2809:2880   */\n      tag_132\n        /* \"#utility.yul\":2877:2878   */\n      0x00\n        /* \"#utility.yul\":2866:2875   */\n      dup4\n        /* \"#utility.yul\":2862:2879   */\n      add\n        /* \"#utility.yul\":2853:2859   */\n      dup5\n        /* \"#utility.yul\":2809:2880   */\n      tag_90\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":2665:2887   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2893:3011   */\n    tag_91:\n        /* \"#utility.yul\":2980:3004   */\n      tag_134\n        /* \"#utility.yul\":2998:3003   */\n      dup2\n        /* \"#utility.yul\":2980:3004   */\n      tag_87\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":2975:2978   */\n      dup3\n        /* \"#utility.yul\":2968:3005   */\n      mstore\n        /* \"#utility.yul\":2893:3011   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3017:3239   */\n    tag_41:\n        /* \"#utility.yul\":3110:3114   */\n      0x00\n        /* \"#utility.yul\":3148:3150   */\n      0x20\n        /* \"#utility.yul\":3137:3146   */\n      dup3\n        /* \"#utility.yul\":3133:3151   */\n      add\n        /* \"#utility.yul\":3125:3151   */\n      swap1\n      pop\n        /* \"#utility.yul\":3161:3232   */\n      tag_136\n        /* \"#utility.yul\":3229:3230   */\n      0x00\n        /* \"#utility.yul\":3218:3227   */\n      dup4\n        /* \"#utility.yul\":3214:3231   */\n      add\n        /* \"#utility.yul\":3205:3211   */\n      dup5\n        /* \"#utility.yul\":3161:3232   */\n      tag_91\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":3017:3239   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3245:3354   */\n    tag_92:\n        /* \"#utility.yul\":3326:3347   */\n      tag_138\n        /* \"#utility.yul\":3341:3346   */\n      dup2\n        /* \"#utility.yul\":3326:3347   */\n      tag_81\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3321:3324   */\n      dup3\n        /* \"#utility.yul\":3314:3348   */\n      mstore\n        /* \"#utility.yul\":3245:3354   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3360:3680   */\n    tag_48:\n        /* \"#utility.yul\":3475:3479   */\n      0x00\n        /* \"#utility.yul\":3513:3515   */\n      0x40\n        /* \"#utility.yul\":3502:3511   */\n      dup3\n        /* \"#utility.yul\":3498:3516   */\n      add\n        /* \"#utility.yul\":3490:3516   */\n      swap1\n      pop\n        /* \"#utility.yul\":3526:3591   */\n      tag_140\n        /* \"#utility.yul\":3588:3589   */\n      0x00\n        /* \"#utility.yul\":3577:3586   */\n      dup4\n        /* \"#utility.yul\":3573:3590   */\n      add\n        /* \"#utility.yul\":3564:3570   */\n      dup6\n        /* \"#utility.yul\":3526:3591   */\n      tag_92\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3601:3673   */\n      tag_141\n        /* \"#utility.yul\":3669:3671   */\n      0x20\n        /* \"#utility.yul\":3658:3667   */\n      dup4\n        /* \"#utility.yul\":3654:3672   */\n      add\n        /* \"#utility.yul\":3645:3651   */\n      dup5\n        /* \"#utility.yul\":3601:3673   */\n      tag_90\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":3360:3680   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3686:3866   */\n    tag_93:\n        /* \"#utility.yul\":3734:3811   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3731:3732   */\n      0x00\n        /* \"#utility.yul\":3724:3812   */\n      mstore\n        /* \"#utility.yul\":3831:3835   */\n      0x11\n        /* \"#utility.yul\":3828:3829   */\n      0x04\n        /* \"#utility.yul\":3821:3836   */\n      mstore\n        /* \"#utility.yul\":3855:3859   */\n      0x24\n        /* \"#utility.yul\":3852:3853   */\n      0x00\n        /* \"#utility.yul\":3845:3860   */\n      revert\n        /* \"#utility.yul\":3872:4063   */\n    tag_65:\n        /* \"#utility.yul\":3912:3915   */\n      0x00\n        /* \"#utility.yul\":3931:3951   */\n      tag_144\n        /* \"#utility.yul\":3949:3950   */\n      dup3\n        /* \"#utility.yul\":3931:3951   */\n      tag_84\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3926:3951   */\n      swap2\n      pop\n        /* \"#utility.yul\":3965:3985   */\n      tag_145\n        /* \"#utility.yul\":3983:3984   */\n      dup4\n        /* \"#utility.yul\":3965:3985   */\n      tag_84\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":3960:3985   */\n      swap3\n      pop\n        /* \"#utility.yul\":4008:4009   */\n      dup3\n        /* \"#utility.yul\":4005:4006   */\n      dup3\n        /* \"#utility.yul\":4001:4010   */\n      add\n        /* \"#utility.yul\":3994:4010   */\n      swap1\n      pop\n        /* \"#utility.yul\":4029:4032   */\n      dup1\n        /* \"#utility.yul\":4026:4027   */\n      dup3\n        /* \"#utility.yul\":4023:4033   */\n      gt\n        /* \"#utility.yul\":4020:4056   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":4036:4054   */\n      tag_147\n      tag_93\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":4020:4056   */\n    tag_146:\n        /* \"#utility.yul\":3872:4063   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207920414288552ead6dd5a2364734502684ad4576e4a94c27f930176e8158cc2e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040525f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f60015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60055534801560b1575f80fd5b50610969806100bf5f395ff3fe60806040526004361061007a575f3560e01c8063d24257c01161004d578063d24257c0146100f4578063d97310af1461011e578063ea05a57f14610148578063ea8a1af0146101845761007a565b806308fb69c61461007e578063284152dc146100a657806338a3fde7146100c2578063614d85e1146100de575b5f80fd5b348015610089575f80fd5b506100a4600480360381019061009f9190610786565b61019a565b005b6100c060048036038101906100bb91906107f7565b61031f565b005b6100dc60048036038101906100d79190610822565b6103d0565b005b3480156100e9575f80fd5b506100f26104fc565b005b3480156100ff575f80fd5b506101086105c9565b604051610115919061085c565b60405180910390f35b348015610129575f80fd5b506101326105cf565b60405161013f919061085c565b60405180910390f35b348015610153575f80fd5b5061016e60048036038101906101699190610786565b6105d5565b60405161017b9190610884565b60405180910390f35b34801561018f575f80fd5b50610198610607565b005b5f73ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036101f2575f80fd5b60025482826040516020016102089291906108ac565b6040516020818303038152906040528051906020012014610227575f80fd5b6005544210610234575f80fd5b81151560035f9054906101000a900460ff161515036102b75760015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f193505050501580156102b1573d5f803e3d5ffd5b5061031b565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610319573d5f803e3d5ffd5b505b5050565b5f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610375575f80fd5b5f3411610380575f80fd5b34600481905550335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060028190555050565b5f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610426575f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461047e575f80fd5b600454341461048b575f80fd5b3360015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060035f6101000a81548160ff02191690831515021790555062015180426104f39190610900565b60058190555050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610554575f80fd5b600554421015610562575f80fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f193505050501580156105c6573d5f803e3d5ffd5b50565b60045481565b60055481565b5f82826040516020016105e99291906108ac565b60405160208183030381529060405280519060200120905092915050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065d575f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106b5575f80fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610717573d5f803e3d5ffd5b50565b5f80fd5b5f8115159050919050565b6107328161071e565b811461073c575f80fd5b50565b5f8135905061074d81610729565b92915050565b5f819050919050565b61076581610753565b811461076f575f80fd5b50565b5f813590506107808161075c565b92915050565b5f806040838503121561079c5761079b61071a565b5b5f6107a98582860161073f565b92505060206107ba85828601610772565b9150509250929050565b5f819050919050565b6107d6816107c4565b81146107e0575f80fd5b50565b5f813590506107f1816107cd565b92915050565b5f6020828403121561080c5761080b61071a565b5b5f610819848285016107e3565b91505092915050565b5f602082840312156108375761083661071a565b5b5f6108448482850161073f565b91505092915050565b61085681610753565b82525050565b5f60208201905061086f5f83018461084d565b92915050565b61087e816107c4565b82525050565b5f6020820190506108975f830184610875565b92915050565b6108a68161071e565b82525050565b5f6040820190506108bf5f83018561089d565b6108cc602083018461084d565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61090a82610753565b915061091583610753565b925082820190508082111561092d5761092c6108d3565b5b9291505056fea26469706673582212207920414288552ead6dd5a2364734502684ad4576e4a94c27f930176e8158cc2e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0xB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x969 DUP1 PUSH2 0xBF PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD24257C0 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0xD24257C0 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0xD97310AF EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xEA05A57F EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0xEA8A1AF0 EQ PUSH2 0x184 JUMPI PUSH2 0x7A JUMP JUMPDEST DUP1 PUSH4 0x8FB69C6 EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x284152DC EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x38A3FDE7 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x614D85E1 EQ PUSH2 0xDE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x786 JUMP JUMPDEST PUSH2 0x19A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x7F7 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0x822 JUMP JUMPDEST PUSH2 0x3D0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0x4FC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x5C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x85C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x132 PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x85C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x153 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x786 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x884 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH2 0x607 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x208 SWAP3 SWAP2 SWAP1 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x227 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP LT PUSH2 0x234 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 ISZERO ISZERO PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x2B7 JUMPI PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2B1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0x31B JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x319 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x375 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x380 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x4 DUP2 SWAP1 SSTORE POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x426 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x47E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD CALLVALUE EQ PUSH2 0x48B JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x15180 TIMESTAMP PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x554 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP LT ISZERO PUSH2 0x562 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5C6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5E9 SWAP3 SWAP2 SWAP1 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x717 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x732 DUP2 PUSH2 0x71E JUMP JUMPDEST DUP2 EQ PUSH2 0x73C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x74D DUP2 PUSH2 0x729 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x765 DUP2 PUSH2 0x753 JUMP JUMPDEST DUP2 EQ PUSH2 0x76F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x780 DUP2 PUSH2 0x75C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x79C JUMPI PUSH2 0x79B PUSH2 0x71A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7A9 DUP6 DUP3 DUP7 ADD PUSH2 0x73F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7BA DUP6 DUP3 DUP7 ADD PUSH2 0x772 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D6 DUP2 PUSH2 0x7C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x7E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7F1 DUP2 PUSH2 0x7CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x80C JUMPI PUSH2 0x80B PUSH2 0x71A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x819 DUP5 DUP3 DUP6 ADD PUSH2 0x7E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x837 JUMPI PUSH2 0x836 PUSH2 0x71A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x844 DUP5 DUP3 DUP6 ADD PUSH2 0x73F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x856 DUP2 PUSH2 0x753 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x86F PUSH0 DUP4 ADD DUP5 PUSH2 0x84D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x87E DUP2 PUSH2 0x7C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x897 PUSH0 DUP4 ADD DUP5 PUSH2 0x875 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8A6 DUP2 PUSH2 0x71E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x8BF PUSH0 DUP4 ADD DUP6 PUSH2 0x89D JUMP JUMPDEST PUSH2 0x8CC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x84D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x90A DUP3 PUSH2 0x753 JUMP JUMPDEST SWAP2 POP PUSH2 0x915 DUP4 PUSH2 0x753 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x92D JUMPI PUSH2 0x92C PUSH2 0x8D3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x20414288552EAD6DD5A2364734502684AD4576E4A94C27F93017 PUSH15 0x8158CC2E64736F6C634300081A0033 ",
							"sourceMap": "65:4277:0:-:0;;;188:3;146:46;;;;;;;;;;;;;;;;;;;;267:3;225:46;;;;;;;;;;;;;;;;;;;;568:10;537:41;;65:4277;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@betAmount_19": {
									"entryPoint": 1481,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@betExpiration_26": {
									"entryPoint": 1487,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cancel_225": {
									"entryPoint": 1543,
									"id": 225,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@makeBet_83": {
									"entryPoint": 799,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@player1CommitmentHash_44": {
									"entryPoint": 1493,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@revealWinner_195": {
									"entryPoint": 410,
									"id": 195,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@takeBet_133": {
									"entryPoint": 976,
									"id": 133,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@timeOut_253": {
									"entryPoint": 1276,
									"id": 253,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool": {
									"entryPoint": 1855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 2019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 2082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_boolt_uint256": {
									"entryPoint": 1926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 2039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": 2220,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 2180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 1988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2259,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1818,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 1997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4066:1",
										"nodeType": "YulBlock",
										"src": "0:4066:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "376:48:1",
													"nodeType": "YulBlock",
													"src": "376:48:1",
													"statements": [
														{
															"nativeSrc": "386:32:1",
															"nodeType": "YulAssignment",
															"src": "386:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "411:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "411:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "404:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "404:6:1"
																		},
																		"nativeSrc": "404:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "404:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "397:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "397:6:1"
																},
																"nativeSrc": "397:21:1",
																"nodeType": "YulFunctionCall",
																"src": "397:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "386:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "386:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "334:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "358:5:1",
														"nodeType": "YulTypedName",
														"src": "358:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "368:7:1",
														"nodeType": "YulTypedName",
														"src": "368:7:1",
														"type": ""
													}
												],
												"src": "334:90:1"
											},
											{
												"body": {
													"nativeSrc": "470:76:1",
													"nodeType": "YulBlock",
													"src": "470:76:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "524:16:1",
																"nodeType": "YulBlock",
																"src": "524:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "533:1:1",
																					"nodeType": "YulLiteral",
																					"src": "533:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "536:1:1",
																					"nodeType": "YulLiteral",
																					"src": "536:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "526:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "526:6:1"
																			},
																			"nativeSrc": "526:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "526:12:1"
																		},
																		"nativeSrc": "526:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "526:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "493:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "493:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "515:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "515:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "500:14:1",
																					"nodeType": "YulIdentifier",
																					"src": "500:14:1"
																				},
																				"nativeSrc": "500:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "500:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "490:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "490:2:1"
																		},
																		"nativeSrc": "490:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "490:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "483:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "483:6:1"
																},
																"nativeSrc": "483:40:1",
																"nodeType": "YulFunctionCall",
																"src": "483:40:1"
															},
															"nativeSrc": "480:60:1",
															"nodeType": "YulIf",
															"src": "480:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "430:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:1",
														"nodeType": "YulTypedName",
														"src": "463:5:1",
														"type": ""
													}
												],
												"src": "430:116:1"
											},
											{
												"body": {
													"nativeSrc": "601:84:1",
													"nodeType": "YulBlock",
													"src": "601:84:1",
													"statements": [
														{
															"nativeSrc": "611:29:1",
															"nodeType": "YulAssignment",
															"src": "611:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "620:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "620:12:1"
																},
																"nativeSrc": "620:20:1",
																"nodeType": "YulFunctionCall",
																"src": "620:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "611:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "611:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "673:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "673:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "649:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "649:23:1"
																},
																"nativeSrc": "649:30:1",
																"nodeType": "YulFunctionCall",
																"src": "649:30:1"
															},
															"nativeSrc": "649:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "649:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "552:133:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "579:6:1",
														"nodeType": "YulTypedName",
														"src": "579:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "587:3:1",
														"nodeType": "YulTypedName",
														"src": "587:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "595:5:1",
														"nodeType": "YulTypedName",
														"src": "595:5:1",
														"type": ""
													}
												],
												"src": "552:133:1"
											},
											{
												"body": {
													"nativeSrc": "736:32:1",
													"nodeType": "YulBlock",
													"src": "736:32:1",
													"statements": [
														{
															"nativeSrc": "746:16:1",
															"nodeType": "YulAssignment",
															"src": "746:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "757:5:1",
																"nodeType": "YulIdentifier",
																"src": "757:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "746:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "746:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "691:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "718:5:1",
														"nodeType": "YulTypedName",
														"src": "718:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "728:7:1",
														"nodeType": "YulTypedName",
														"src": "728:7:1",
														"type": ""
													}
												],
												"src": "691:77:1"
											},
											{
												"body": {
													"nativeSrc": "817:79:1",
													"nodeType": "YulBlock",
													"src": "817:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "874:16:1",
																"nodeType": "YulBlock",
																"src": "874:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "883:1:1",
																					"nodeType": "YulLiteral",
																					"src": "883:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "886:1:1",
																					"nodeType": "YulLiteral",
																					"src": "886:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "876:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "876:6:1"
																			},
																			"nativeSrc": "876:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "876:12:1"
																		},
																		"nativeSrc": "876:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "876:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "840:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "840:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "865:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "865:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "847:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "847:17:1"
																				},
																				"nativeSrc": "847:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "847:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "837:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "837:2:1"
																		},
																		"nativeSrc": "837:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "837:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "830:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "830:6:1"
																},
																"nativeSrc": "830:43:1",
																"nodeType": "YulFunctionCall",
																"src": "830:43:1"
															},
															"nativeSrc": "827:63:1",
															"nodeType": "YulIf",
															"src": "827:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "774:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "810:5:1",
														"nodeType": "YulTypedName",
														"src": "810:5:1",
														"type": ""
													}
												],
												"src": "774:122:1"
											},
											{
												"body": {
													"nativeSrc": "954:87:1",
													"nodeType": "YulBlock",
													"src": "954:87:1",
													"statements": [
														{
															"nativeSrc": "964:29:1",
															"nodeType": "YulAssignment",
															"src": "964:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "986:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "986:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "973:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "973:12:1"
																},
																"nativeSrc": "973:20:1",
																"nodeType": "YulFunctionCall",
																"src": "973:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "964:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "964:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1029:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1029:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1002:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "1002:26:1"
																},
																"nativeSrc": "1002:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1002:33:1"
															},
															"nativeSrc": "1002:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1002:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "902:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "932:6:1",
														"nodeType": "YulTypedName",
														"src": "932:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "940:3:1",
														"nodeType": "YulTypedName",
														"src": "940:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "948:5:1",
														"nodeType": "YulTypedName",
														"src": "948:5:1",
														"type": ""
													}
												],
												"src": "902:139:1"
											},
											{
												"body": {
													"nativeSrc": "1127:388:1",
													"nodeType": "YulBlock",
													"src": "1127:388:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1173:83:1",
																"nodeType": "YulBlock",
																"src": "1173:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1175:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1175:77:1"
																			},
																			"nativeSrc": "1175:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1175:79:1"
																		},
																		"nativeSrc": "1175:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1175:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1148:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1148:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1157:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1157:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1144:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1144:3:1"
																		},
																		"nativeSrc": "1144:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1144:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1169:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1169:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1140:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:1"
																},
																"nativeSrc": "1140:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1140:32:1"
															},
															"nativeSrc": "1137:119:1",
															"nodeType": "YulIf",
															"src": "1137:119:1"
														},
														{
															"nativeSrc": "1266:114:1",
															"nodeType": "YulBlock",
															"src": "1266:114:1",
															"statements": [
																{
																	"nativeSrc": "1281:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1281:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1295:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1295:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1285:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1285:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1310:60:1",
																	"nodeType": "YulAssignment",
																	"src": "1310:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1342:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1342:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1353:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1353:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1338:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1338:3:1"
																				},
																				"nativeSrc": "1338:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1338:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1362:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "1320:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1320:17:1"
																		},
																		"nativeSrc": "1320:50:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1320:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1310:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1310:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1390:118:1",
															"nodeType": "YulBlock",
															"src": "1390:118:1",
															"statements": [
																{
																	"nativeSrc": "1405:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1405:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1419:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1419:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1409:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1409:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1435:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1435:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1470:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1470:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1481:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1481:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1466:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1466:3:1"
																				},
																				"nativeSrc": "1466:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1466:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1490:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1490:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1445:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1445:20:1"
																		},
																		"nativeSrc": "1445:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1435:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1435:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_uint256",
												"nativeSrc": "1047:468:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1089:9:1",
														"nodeType": "YulTypedName",
														"src": "1089:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1100:7:1",
														"nodeType": "YulTypedName",
														"src": "1100:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1112:6:1",
														"nodeType": "YulTypedName",
														"src": "1112:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1120:6:1",
														"nodeType": "YulTypedName",
														"src": "1120:6:1",
														"type": ""
													}
												],
												"src": "1047:468:1"
											},
											{
												"body": {
													"nativeSrc": "1566:32:1",
													"nodeType": "YulBlock",
													"src": "1566:32:1",
													"statements": [
														{
															"nativeSrc": "1576:16:1",
															"nodeType": "YulAssignment",
															"src": "1576:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "1587:5:1",
																"nodeType": "YulIdentifier",
																"src": "1587:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1576:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1576:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "1521:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1548:5:1",
														"nodeType": "YulTypedName",
														"src": "1548:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1558:7:1",
														"nodeType": "YulTypedName",
														"src": "1558:7:1",
														"type": ""
													}
												],
												"src": "1521:77:1"
											},
											{
												"body": {
													"nativeSrc": "1647:79:1",
													"nodeType": "YulBlock",
													"src": "1647:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1704:16:1",
																"nodeType": "YulBlock",
																"src": "1704:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1713:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1716:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1716:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1706:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1706:6:1"
																			},
																			"nativeSrc": "1706:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1706:12:1"
																		},
																		"nativeSrc": "1706:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1706:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1670:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1670:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1695:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1695:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "1677:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1677:17:1"
																				},
																				"nativeSrc": "1677:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1677:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1667:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1667:2:1"
																		},
																		"nativeSrc": "1667:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1667:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1660:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:1"
																},
																"nativeSrc": "1660:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1660:43:1"
															},
															"nativeSrc": "1657:63:1",
															"nodeType": "YulIf",
															"src": "1657:63:1"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "1604:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1640:5:1",
														"nodeType": "YulTypedName",
														"src": "1640:5:1",
														"type": ""
													}
												],
												"src": "1604:122:1"
											},
											{
												"body": {
													"nativeSrc": "1784:87:1",
													"nodeType": "YulBlock",
													"src": "1784:87:1",
													"statements": [
														{
															"nativeSrc": "1794:29:1",
															"nodeType": "YulAssignment",
															"src": "1794:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1816:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1816:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1803:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1803:12:1"
																},
																"nativeSrc": "1803:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1803:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1794:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1794:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1859:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1859:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "1832:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "1832:26:1"
																},
																"nativeSrc": "1832:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1832:33:1"
															},
															"nativeSrc": "1832:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1832:33:1"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "1732:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1762:6:1",
														"nodeType": "YulTypedName",
														"src": "1762:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1770:3:1",
														"nodeType": "YulTypedName",
														"src": "1770:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1778:5:1",
														"nodeType": "YulTypedName",
														"src": "1778:5:1",
														"type": ""
													}
												],
												"src": "1732:139:1"
											},
											{
												"body": {
													"nativeSrc": "1943:263:1",
													"nodeType": "YulBlock",
													"src": "1943:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1989:83:1",
																"nodeType": "YulBlock",
																"src": "1989:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1991:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1991:77:1"
																			},
																			"nativeSrc": "1991:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1991:79:1"
																		},
																		"nativeSrc": "1991:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1991:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1964:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1964:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1973:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1973:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1960:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1960:3:1"
																		},
																		"nativeSrc": "1960:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1960:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1985:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1985:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1956:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1956:3:1"
																},
																"nativeSrc": "1956:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1956:32:1"
															},
															"nativeSrc": "1953:119:1",
															"nodeType": "YulIf",
															"src": "1953:119:1"
														},
														{
															"nativeSrc": "2082:117:1",
															"nodeType": "YulBlock",
															"src": "2082:117:1",
															"statements": [
																{
																	"nativeSrc": "2097:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2097:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2111:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2111:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2101:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2101:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2126:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2126:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2161:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2161:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2172:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2172:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2157:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2157:3:1"
																				},
																				"nativeSrc": "2157:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2157:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2181:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2181:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "2136:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2136:20:1"
																		},
																		"nativeSrc": "2136:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2136:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2126:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2126:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1877:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1913:9:1",
														"nodeType": "YulTypedName",
														"src": "1913:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1924:7:1",
														"nodeType": "YulTypedName",
														"src": "1924:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1936:6:1",
														"nodeType": "YulTypedName",
														"src": "1936:6:1",
														"type": ""
													}
												],
												"src": "1877:329:1"
											},
											{
												"body": {
													"nativeSrc": "2275:260:1",
													"nodeType": "YulBlock",
													"src": "2275:260:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2321:83:1",
																"nodeType": "YulBlock",
																"src": "2321:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2323:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2323:77:1"
																			},
																			"nativeSrc": "2323:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2323:79:1"
																		},
																		"nativeSrc": "2323:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2323:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2296:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2296:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2305:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2305:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2292:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2292:3:1"
																		},
																		"nativeSrc": "2292:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2292:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2317:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2317:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2288:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2288:3:1"
																},
																"nativeSrc": "2288:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2288:32:1"
															},
															"nativeSrc": "2285:119:1",
															"nodeType": "YulIf",
															"src": "2285:119:1"
														},
														{
															"nativeSrc": "2414:114:1",
															"nodeType": "YulBlock",
															"src": "2414:114:1",
															"statements": [
																{
																	"nativeSrc": "2429:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2429:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2443:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2443:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2433:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2433:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2458:60:1",
																	"nodeType": "YulAssignment",
																	"src": "2458:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2490:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2490:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2501:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2501:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2486:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2486:3:1"
																				},
																				"nativeSrc": "2486:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2486:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2510:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2510:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "2468:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "2468:17:1"
																		},
																		"nativeSrc": "2468:50:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2468:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2458:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2458:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "2212:323:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2245:9:1",
														"nodeType": "YulTypedName",
														"src": "2245:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2256:7:1",
														"nodeType": "YulTypedName",
														"src": "2256:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2268:6:1",
														"nodeType": "YulTypedName",
														"src": "2268:6:1",
														"type": ""
													}
												],
												"src": "2212:323:1"
											},
											{
												"body": {
													"nativeSrc": "2606:53:1",
													"nodeType": "YulBlock",
													"src": "2606:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2623:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2623:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2646:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2646:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2628:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "2628:17:1"
																		},
																		"nativeSrc": "2628:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2628:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2616:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2616:6:1"
																},
																"nativeSrc": "2616:37:1",
																"nodeType": "YulFunctionCall",
																"src": "2616:37:1"
															},
															"nativeSrc": "2616:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "2616:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2541:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2594:5:1",
														"nodeType": "YulTypedName",
														"src": "2594:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2601:3:1",
														"nodeType": "YulTypedName",
														"src": "2601:3:1",
														"type": ""
													}
												],
												"src": "2541:118:1"
											},
											{
												"body": {
													"nativeSrc": "2763:124:1",
													"nodeType": "YulBlock",
													"src": "2763:124:1",
													"statements": [
														{
															"nativeSrc": "2773:26:1",
															"nodeType": "YulAssignment",
															"src": "2773:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2785:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2785:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2796:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2796:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2781:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2781:3:1"
																},
																"nativeSrc": "2781:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2781:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2773:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2773:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2853:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2853:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2866:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2866:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2877:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2877:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2862:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2862:3:1"
																		},
																		"nativeSrc": "2862:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2862:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2809:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2809:43:1"
																},
																"nativeSrc": "2809:71:1",
																"nodeType": "YulFunctionCall",
																"src": "2809:71:1"
															},
															"nativeSrc": "2809:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "2809:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2665:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2735:9:1",
														"nodeType": "YulTypedName",
														"src": "2735:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2747:6:1",
														"nodeType": "YulTypedName",
														"src": "2747:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2758:4:1",
														"nodeType": "YulTypedName",
														"src": "2758:4:1",
														"type": ""
													}
												],
												"src": "2665:222:1"
											},
											{
												"body": {
													"nativeSrc": "2958:53:1",
													"nodeType": "YulBlock",
													"src": "2958:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2975:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2975:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2998:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2998:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "2980:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "2980:17:1"
																		},
																		"nativeSrc": "2980:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2980:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2968:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2968:6:1"
																},
																"nativeSrc": "2968:37:1",
																"nodeType": "YulFunctionCall",
																"src": "2968:37:1"
															},
															"nativeSrc": "2968:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "2968:37:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "2893:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2946:5:1",
														"nodeType": "YulTypedName",
														"src": "2946:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2953:3:1",
														"nodeType": "YulTypedName",
														"src": "2953:3:1",
														"type": ""
													}
												],
												"src": "2893:118:1"
											},
											{
												"body": {
													"nativeSrc": "3115:124:1",
													"nodeType": "YulBlock",
													"src": "3115:124:1",
													"statements": [
														{
															"nativeSrc": "3125:26:1",
															"nodeType": "YulAssignment",
															"src": "3125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3137:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3137:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3148:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3133:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3133:3:1"
																},
																"nativeSrc": "3133:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3125:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3205:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3205:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3218:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3218:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3229:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3229:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3214:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3214:3:1"
																		},
																		"nativeSrc": "3214:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3214:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "3161:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3161:43:1"
																},
																"nativeSrc": "3161:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3161:71:1"
															},
															"nativeSrc": "3161:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3161:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "3017:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3087:9:1",
														"nodeType": "YulTypedName",
														"src": "3087:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3099:6:1",
														"nodeType": "YulTypedName",
														"src": "3099:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3110:4:1",
														"nodeType": "YulTypedName",
														"src": "3110:4:1",
														"type": ""
													}
												],
												"src": "3017:222:1"
											},
											{
												"body": {
													"nativeSrc": "3304:50:1",
													"nodeType": "YulBlock",
													"src": "3304:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3321:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3321:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3341:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3341:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3326:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "3326:14:1"
																		},
																		"nativeSrc": "3326:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3326:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3314:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3314:6:1"
																},
																"nativeSrc": "3314:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3314:34:1"
															},
															"nativeSrc": "3314:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3314:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3245:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3292:5:1",
														"nodeType": "YulTypedName",
														"src": "3292:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3299:3:1",
														"nodeType": "YulTypedName",
														"src": "3299:3:1",
														"type": ""
													}
												],
												"src": "3245:109:1"
											},
											{
												"body": {
													"nativeSrc": "3480:200:1",
													"nodeType": "YulBlock",
													"src": "3480:200:1",
													"statements": [
														{
															"nativeSrc": "3490:26:1",
															"nodeType": "YulAssignment",
															"src": "3490:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3502:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3502:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3513:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3513:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3498:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3498:3:1"
																},
																"nativeSrc": "3498:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3498:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3490:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3490:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3564:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3564:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3577:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3577:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3588:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3588:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3573:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3573:3:1"
																		},
																		"nativeSrc": "3573:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3573:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3526:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "3526:37:1"
																},
																"nativeSrc": "3526:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3526:65:1"
															},
															"nativeSrc": "3526:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3526:65:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3645:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3645:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3658:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3658:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3669:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3669:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3654:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3654:3:1"
																		},
																		"nativeSrc": "3654:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3654:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3601:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3601:43:1"
																},
																"nativeSrc": "3601:72:1",
																"nodeType": "YulFunctionCall",
																"src": "3601:72:1"
															},
															"nativeSrc": "3601:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "3601:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed",
												"nativeSrc": "3360:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3444:9:1",
														"nodeType": "YulTypedName",
														"src": "3444:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3456:6:1",
														"nodeType": "YulTypedName",
														"src": "3456:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3464:6:1",
														"nodeType": "YulTypedName",
														"src": "3464:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3475:4:1",
														"nodeType": "YulTypedName",
														"src": "3475:4:1",
														"type": ""
													}
												],
												"src": "3360:320:1"
											},
											{
												"body": {
													"nativeSrc": "3714:152:1",
													"nodeType": "YulBlock",
													"src": "3714:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3731:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3731:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3734:77:1",
																		"nodeType": "YulLiteral",
																		"src": "3734:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3724:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3724:6:1"
																},
																"nativeSrc": "3724:88:1",
																"nodeType": "YulFunctionCall",
																"src": "3724:88:1"
															},
															"nativeSrc": "3724:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "3724:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3828:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3828:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3831:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3831:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3821:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3821:6:1"
																},
																"nativeSrc": "3821:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3821:15:1"
															},
															"nativeSrc": "3821:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3821:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3852:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3852:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3855:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3855:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3845:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3845:6:1"
																},
																"nativeSrc": "3845:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3845:15:1"
															},
															"nativeSrc": "3845:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3845:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3686:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3686:180:1"
											},
											{
												"body": {
													"nativeSrc": "3916:147:1",
													"nodeType": "YulBlock",
													"src": "3916:147:1",
													"statements": [
														{
															"nativeSrc": "3926:25:1",
															"nodeType": "YulAssignment",
															"src": "3926:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3949:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3949:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3931:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3931:17:1"
																},
																"nativeSrc": "3931:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3931:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3926:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "3926:1:1"
																}
															]
														},
														{
															"nativeSrc": "3960:25:1",
															"nodeType": "YulAssignment",
															"src": "3960:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3983:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3983:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3965:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3965:17:1"
																},
																"nativeSrc": "3965:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3965:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3960:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "3960:1:1"
																}
															]
														},
														{
															"nativeSrc": "3994:16:1",
															"nodeType": "YulAssignment",
															"src": "3994:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4005:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4005:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4008:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4008:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4001:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4001:3:1"
																},
																"nativeSrc": "4001:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4001:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3994:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3994:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4034:22:1",
																"nodeType": "YulBlock",
																"src": "4034:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4036:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4036:16:1"
																			},
																			"nativeSrc": "4036:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4036:18:1"
																		},
																		"nativeSrc": "4036:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4036:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4026:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4026:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4029:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4029:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4023:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4023:2:1"
																},
																"nativeSrc": "4023:10:1",
																"nodeType": "YulFunctionCall",
																"src": "4023:10:1"
															},
															"nativeSrc": "4020:36:1",
															"nodeType": "YulIf",
															"src": "4020:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3872:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3903:1:1",
														"nodeType": "YulTypedName",
														"src": "3903:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3906:1:1",
														"nodeType": "YulTypedName",
														"src": "3906:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3912:3:1",
														"nodeType": "YulTypedName",
														"src": "3912:3:1",
														"type": ""
													}
												],
												"src": "3872:191:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_boolt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061007a575f3560e01c8063d24257c01161004d578063d24257c0146100f4578063d97310af1461011e578063ea05a57f14610148578063ea8a1af0146101845761007a565b806308fb69c61461007e578063284152dc146100a657806338a3fde7146100c2578063614d85e1146100de575b5f80fd5b348015610089575f80fd5b506100a4600480360381019061009f9190610786565b61019a565b005b6100c060048036038101906100bb91906107f7565b61031f565b005b6100dc60048036038101906100d79190610822565b6103d0565b005b3480156100e9575f80fd5b506100f26104fc565b005b3480156100ff575f80fd5b506101086105c9565b604051610115919061085c565b60405180910390f35b348015610129575f80fd5b506101326105cf565b60405161013f919061085c565b60405180910390f35b348015610153575f80fd5b5061016e60048036038101906101699190610786565b6105d5565b60405161017b9190610884565b60405180910390f35b34801561018f575f80fd5b50610198610607565b005b5f73ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036101f2575f80fd5b60025482826040516020016102089291906108ac565b6040516020818303038152906040528051906020012014610227575f80fd5b6005544210610234575f80fd5b81151560035f9054906101000a900460ff161515036102b75760015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f193505050501580156102b1573d5f803e3d5ffd5b5061031b565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610319573d5f803e3d5ffd5b505b5050565b5f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610375575f80fd5b5f3411610380575f80fd5b34600481905550335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060028190555050565b5f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610426575f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461047e575f80fd5b600454341461048b575f80fd5b3360015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060035f6101000a81548160ff02191690831515021790555062015180426104f39190610900565b60058190555050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610554575f80fd5b600554421015610562575f80fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f193505050501580156105c6573d5f803e3d5ffd5b50565b60045481565b60055481565b5f82826040516020016105e99291906108ac565b60405160208183030381529060405280519060200120905092915050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065d575f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106b5575f80fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610717573d5f803e3d5ffd5b50565b5f80fd5b5f8115159050919050565b6107328161071e565b811461073c575f80fd5b50565b5f8135905061074d81610729565b92915050565b5f819050919050565b61076581610753565b811461076f575f80fd5b50565b5f813590506107808161075c565b92915050565b5f806040838503121561079c5761079b61071a565b5b5f6107a98582860161073f565b92505060206107ba85828601610772565b9150509250929050565b5f819050919050565b6107d6816107c4565b81146107e0575f80fd5b50565b5f813590506107f1816107cd565b92915050565b5f6020828403121561080c5761080b61071a565b5b5f610819848285016107e3565b91505092915050565b5f602082840312156108375761083661071a565b5b5f6108448482850161073f565b91505092915050565b61085681610753565b82525050565b5f60208201905061086f5f83018461084d565b92915050565b61087e816107c4565b82525050565b5f6020820190506108975f830184610875565b92915050565b6108a68161071e565b82525050565b5f6040820190506108bf5f83018561089d565b6108cc602083018461084d565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61090a82610753565b915061091583610753565b925082820190508082111561092d5761092c6108d3565b5b9291505056fea26469706673582212207920414288552ead6dd5a2364734502684ad4576e4a94c27f930176e8158cc2e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD24257C0 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0xD24257C0 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0xD97310AF EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xEA05A57F EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0xEA8A1AF0 EQ PUSH2 0x184 JUMPI PUSH2 0x7A JUMP JUMPDEST DUP1 PUSH4 0x8FB69C6 EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x284152DC EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x38A3FDE7 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x614D85E1 EQ PUSH2 0xDE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x786 JUMP JUMPDEST PUSH2 0x19A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x7F7 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0x822 JUMP JUMPDEST PUSH2 0x3D0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0x4FC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x5C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x85C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x132 PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x85C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x153 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x786 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x884 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH2 0x607 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x208 SWAP3 SWAP2 SWAP1 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x227 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP LT PUSH2 0x234 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 ISZERO ISZERO PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x2B7 JUMPI PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2B1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0x31B JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x319 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x375 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x380 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x4 DUP2 SWAP1 SSTORE POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x426 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x47E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD CALLVALUE EQ PUSH2 0x48B JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x15180 TIMESTAMP PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x554 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP LT ISZERO PUSH2 0x562 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5C6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5E9 SWAP3 SWAP2 SWAP1 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x717 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x732 DUP2 PUSH2 0x71E JUMP JUMPDEST DUP2 EQ PUSH2 0x73C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x74D DUP2 PUSH2 0x729 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x765 DUP2 PUSH2 0x753 JUMP JUMPDEST DUP2 EQ PUSH2 0x76F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x780 DUP2 PUSH2 0x75C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x79C JUMPI PUSH2 0x79B PUSH2 0x71A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7A9 DUP6 DUP3 DUP7 ADD PUSH2 0x73F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7BA DUP6 DUP3 DUP7 ADD PUSH2 0x772 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D6 DUP2 PUSH2 0x7C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x7E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7F1 DUP2 PUSH2 0x7CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x80C JUMPI PUSH2 0x80B PUSH2 0x71A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x819 DUP5 DUP3 DUP6 ADD PUSH2 0x7E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x837 JUMPI PUSH2 0x836 PUSH2 0x71A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x844 DUP5 DUP3 DUP6 ADD PUSH2 0x73F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x856 DUP2 PUSH2 0x753 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x86F PUSH0 DUP4 ADD DUP5 PUSH2 0x84D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x87E DUP2 PUSH2 0x7C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x897 PUSH0 DUP4 ADD DUP5 PUSH2 0x875 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8A6 DUP2 PUSH2 0x71E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x8BF PUSH0 DUP4 ADD DUP6 PUSH2 0x89D JUMP JUMPDEST PUSH2 0x8CC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x84D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x90A DUP3 PUSH2 0x753 JUMP JUMPDEST SWAP2 POP PUSH2 0x915 DUP4 PUSH2 0x753 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x92D JUMPI PUSH2 0x92C PUSH2 0x8D3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x20414288552EAD6DD5A2364734502684AD4576E4A94C27F93017 PUSH15 0x8158CC2E64736F6C634300081A0033 ",
							"sourceMap": "65:4277:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2378:1023;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;762:711;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1479:893;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3859:481;;;;;;;;;;;;;:::i;:::-;;478:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;537:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;604:152;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3407:446;;;;;;;;;;;;;:::i;:::-;;2378:1023;2628:3;2602:30;;:14;;;;;;;;;;;:30;;;2594:39;;;;;;2898:17;;2879:6;2887:5;2868:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2858:36;;;;;;:57;2850:66;;;;;;3003:13;;2985:15;:31;2977:40;;;;;;3153:6;3137:22;;:12;;;;;;;;;;;:22;;;3133:262;;3214:14;;;;;;;;;;;:23;;:46;3238:21;3214:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3133:262;;;3338:14;;;;;;;;;;:23;;:46;3362:21;3338:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3133:262;2378:1023;;:::o;762:711::-;1036:3;1009:31;;:14;;;;;;;;;;:31;;;1001:40;;;;;;1158:1;1146:9;:13;1138:22;;;;;;1182:9;1170;:21;;;;1378:10;1353:14;;:36;;;;;;;;;;;;;;;;;;1462:4;1442:17;:24;;;;762:711;:::o;1479:893::-;1627:3;1601:30;;:14;;;;;;;;;;:30;;;1593:39;;;;;;1823:3;1797:30;;:14;;;;;;;;;;;:30;;;1789:39;;;;;;1989:9;;1976;:22;1968:31;;;;;;2186:10;2161:14;;:36;;;;;;;;;;;;;;;;;;2255:6;2240:12;;:21;;;;;;;;;;;;;;;;;;2357:8;2339:15;:26;;;;:::i;:::-;2323:13;:42;;;;1479:893;:::o;3859:481::-;4103:14;;;;;;;;;;;4089:28;;:10;:28;;;4081:37;;;;;;4198:13;;4179:15;:32;;4171:41;;;;;;4287:14;;;;;;;;;;;:23;;:46;4311:21;4287:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3859:481::o;478:24::-;;;;:::o;537:41::-;;;;:::o;604:152::-;687:7;734:6;742:5;723:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;713:36;;;;;;706:43;;604:152;;;;:::o;3407:446::-;3595:14;;;;;;;;;;3581:28;;:10;:28;;;3573:37;;;;;;3715:3;3689:30;;:14;;;;;;;;;;;:30;;;3681:39;;;;;;3800:14;;;;;;;;;;:23;;:46;3824:21;3800:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3407:446::o;88:117:1:-;197:1;194;187:12;334:90;368:7;411:5;404:13;397:21;386:32;;334:90;;;:::o;430:116::-;500:21;515:5;500:21;:::i;:::-;493:5;490:32;480:60;;536:1;533;526:12;480:60;430:116;:::o;552:133::-;595:5;633:6;620:20;611:29;;649:30;673:5;649:30;:::i;:::-;552:133;;;;:::o;691:77::-;728:7;757:5;746:16;;691:77;;;:::o;774:122::-;847:24;865:5;847:24;:::i;:::-;840:5;837:35;827:63;;886:1;883;876:12;827:63;774:122;:::o;902:139::-;948:5;986:6;973:20;964:29;;1002:33;1029:5;1002:33;:::i;:::-;902:139;;;;:::o;1047:468::-;1112:6;1120;1169:2;1157:9;1148:7;1144:23;1140:32;1137:119;;;1175:79;;:::i;:::-;1137:119;1295:1;1320:50;1362:7;1353:6;1342:9;1338:22;1320:50;:::i;:::-;1310:60;;1266:114;1419:2;1445:53;1490:7;1481:6;1470:9;1466:22;1445:53;:::i;:::-;1435:63;;1390:118;1047:468;;;;;:::o;1521:77::-;1558:7;1587:5;1576:16;;1521:77;;;:::o;1604:122::-;1677:24;1695:5;1677:24;:::i;:::-;1670:5;1667:35;1657:63;;1716:1;1713;1706:12;1657:63;1604:122;:::o;1732:139::-;1778:5;1816:6;1803:20;1794:29;;1832:33;1859:5;1832:33;:::i;:::-;1732:139;;;;:::o;1877:329::-;1936:6;1985:2;1973:9;1964:7;1960:23;1956:32;1953:119;;;1991:79;;:::i;:::-;1953:119;2111:1;2136:53;2181:7;2172:6;2161:9;2157:22;2136:53;:::i;:::-;2126:63;;2082:117;1877:329;;;;:::o;2212:323::-;2268:6;2317:2;2305:9;2296:7;2292:23;2288:32;2285:119;;;2323:79;;:::i;:::-;2285:119;2443:1;2468:50;2510:7;2501:6;2490:9;2486:22;2468:50;:::i;:::-;2458:60;;2414:114;2212:323;;;;:::o;2541:118::-;2628:24;2646:5;2628:24;:::i;:::-;2623:3;2616:37;2541:118;;:::o;2665:222::-;2758:4;2796:2;2785:9;2781:18;2773:26;;2809:71;2877:1;2866:9;2862:17;2853:6;2809:71;:::i;:::-;2665:222;;;;:::o;2893:118::-;2980:24;2998:5;2980:24;:::i;:::-;2975:3;2968:37;2893:118;;:::o;3017:222::-;3110:4;3148:2;3137:9;3133:18;3125:26;;3161:71;3229:1;3218:9;3214:17;3205:6;3161:71;:::i;:::-;3017:222;;;;:::o;3245:109::-;3326:21;3341:5;3326:21;:::i;:::-;3321:3;3314:34;3245:109;;:::o;3360:320::-;3475:4;3513:2;3502:9;3498:18;3490:26;;3526:65;3588:1;3577:9;3573:17;3564:6;3526:65;:::i;:::-;3601:72;3669:2;3658:9;3654:18;3645:6;3601:72;:::i;:::-;3360:320;;;;;:::o;3686:180::-;3734:77;3731:1;3724:88;3831:4;3828:1;3821:15;3855:4;3852:1;3845:15;3872:191;3912:3;3931:20;3949:1;3931:20;:::i;:::-;3926:25;;3965:20;3983:1;3965:20;:::i;:::-;3960:25;;4008:1;4005;4001:9;3994:16;;4029:3;4026:1;4023:10;4020:36;;;4036:18;;:::i;:::-;4020:36;3872:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "481800",
								"executionCost": "71152",
								"totalCost": "552952"
							},
							"external": {
								"betAmount()": "2425",
								"betExpiration()": "2447",
								"cancel()": "infinite",
								"makeBet(bytes32)": "71079",
								"player1CommitmentHash(bool,uint256)": "infinite",
								"revealWinner(bool,uint256)": "infinite",
								"takeBet(bool)": "infinite",
								"timeOut()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 65,
									"end": 4342,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 65,
									"end": 4342,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 65,
									"end": 4342,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 188,
									"end": 191,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 192,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 146,
									"end": 192,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 192,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 146,
									"end": 192,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 146,
									"end": 192,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 146,
									"end": 192,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 146,
									"end": 192,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 146,
									"end": 192,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 146,
									"end": 192,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 146,
									"end": 192,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 146,
									"end": 192,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 146,
									"end": 192,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 146,
									"end": 192,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 146,
									"end": 192,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 146,
									"end": 192,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 146,
									"end": 192,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 146,
									"end": 192,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 146,
									"end": 192,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 146,
									"end": 192,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 146,
									"end": 192,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 267,
									"end": 270,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 271,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 225,
									"end": 271,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 271,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 225,
									"end": 271,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 225,
									"end": 271,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 225,
									"end": 271,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 225,
									"end": 271,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 225,
									"end": 271,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 225,
									"end": 271,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 225,
									"end": 271,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 225,
									"end": 271,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 225,
									"end": 271,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 225,
									"end": 271,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 225,
									"end": 271,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 225,
									"end": 271,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 225,
									"end": 271,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 225,
									"end": 271,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 225,
									"end": 271,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 225,
									"end": 271,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 225,
									"end": 271,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 568,
									"end": 578,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 537,
									"end": 578,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 537,
									"end": 578,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 65,
									"end": 4342,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 65,
									"end": 4342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65,
									"end": 4342,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 65,
									"end": 4342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 65,
									"end": 4342,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 65,
									"end": 4342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 4342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65,
									"end": 4342,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 65,
									"end": 4342,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 65,
									"end": 4342,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 65,
									"end": 4342,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 65,
									"end": 4342,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 4342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65,
									"end": 4342,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 4342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 4342,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 65,
									"end": 4342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 4342,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207920414288552ead6dd5a2364734502684ad4576e4a94c27f930176e8158cc2e64736f6c634300081a0033",
									".code": [
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH",
											"source": 0,
											"value": "D24257C0"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH",
											"source": 0,
											"value": "D24257C0"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH",
											"source": 0,
											"value": "D97310AF"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH",
											"source": 0,
											"value": "EA05A57F"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH",
											"source": 0,
											"value": "EA8A1AF0"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH",
											"source": 0,
											"value": "8FB69C6"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH",
											"source": 0,
											"value": "284152DC"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH",
											"source": 0,
											"value": "38A3FDE7"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH",
											"source": 0,
											"value": "614D85E1"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 4342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2378,
											"end": 3401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2378,
											"end": 3401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1473,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 762,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 762,
											"end": 1473,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 762,
											"end": 1473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1473,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1473,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 762,
											"end": 1473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 762,
											"end": 1473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1473,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 762,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 762,
											"end": 1473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1473,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 762,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1473,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 2372,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1479,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1479,
											"end": 2372,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1479,
											"end": 2372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 2372,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 2372,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 2372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 2372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 2372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1479,
											"end": 2372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 2372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1479,
											"end": 2372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 2372,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1479,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1479,
											"end": 2372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 2372,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1479,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 2372,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 4340,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3859,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 4340,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 4340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 4340,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3859,
											"end": 4340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 4340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3859,
											"end": 4340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 4340,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 4340,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3859,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 4340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3859,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3859,
											"end": 4340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 4340,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3859,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 4340,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 478,
											"end": 502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 478,
											"end": 502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 537,
											"end": 578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 537,
											"end": 578,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 537,
											"end": 578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 537,
											"end": 578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 537,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 537,
											"end": 578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 537,
											"end": 578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 537,
											"end": 578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 537,
											"end": 578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 537,
											"end": 578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 537,
											"end": 578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 537,
											"end": 578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 604,
											"end": 756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 604,
											"end": 756,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 604,
											"end": 756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 604,
											"end": 756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 604,
											"end": 756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 604,
											"end": 756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 604,
											"end": 756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 604,
											"end": 756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 604,
											"end": 756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 604,
											"end": 756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 604,
											"end": 756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3853,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3407,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3853,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3853,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3407,
											"end": 3853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3407,
											"end": 3853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3853,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3853,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3407,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3407,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3407,
											"end": 3853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3853,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3407,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3853,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2632,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2602,
											"end": 2632,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2632,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2602,
											"end": 2632,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2632,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2594,
											"end": 2633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2594,
											"end": 2633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2633,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2633,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2594,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2898,
											"end": 2915,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2898,
											"end": 2915,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2885,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2868,
											"end": 2893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2868,
											"end": 2893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2894,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2894,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2858,
											"end": 2894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2894,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2915,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2850,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2850,
											"end": 2916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2850,
											"end": 2916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2850,
											"end": 2916,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2850,
											"end": 2916,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2850,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3003,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3003,
											"end": 3016,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3000,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3016,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2977,
											"end": 3017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2977,
											"end": 3017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3017,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3017,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2977,
											"end": 3017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3153,
											"end": 3159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3159,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3159,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3149,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3137,
											"end": 3149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3137,
											"end": 3149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3149,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3149,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3137,
											"end": 3149,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3149,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3149,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3137,
											"end": 3149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3159,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3159,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3159,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3133,
											"end": 3395,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3214,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 3238,
											"end": 3259,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3133,
											"end": 3395,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3395,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3133,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3361,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3338,
											"end": 3361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 3362,
											"end": 3383,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3395,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3133,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 3401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1473,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 762,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1040,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1009,
											"end": 1040,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1023,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1023,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1009,
											"end": 1023,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1023,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1023,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1009,
											"end": 1023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1040,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1009,
											"end": 1040,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1001,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1001,
											"end": 1041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1001,
											"end": 1041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1001,
											"end": 1041,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1001,
											"end": 1041,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1001,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1155,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1146,
											"end": 1159,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1138,
											"end": 1160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1160,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1160,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1138,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1182,
											"end": 1191,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1170,
											"end": 1191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1191,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1388,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1389,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1353,
											"end": 1389,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1389,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1389,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1353,
											"end": 1389,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1389,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1389,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1389,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1389,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1353,
											"end": 1389,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1389,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1389,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1389,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1353,
											"end": 1389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1459,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1442,
											"end": 1466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1466,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 2372,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1479,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1615,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1615,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1601,
											"end": 1615,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1615,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1615,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1601,
											"end": 1615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1593,
											"end": 1632,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1632,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1632,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1593,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1827,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1827,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1797,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1811,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1797,
											"end": 1811,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1811,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1827,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1827,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1789,
											"end": 1828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1828,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1828,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1789,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 1998,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1989,
											"end": 1998,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 1985,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 1998,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1968,
											"end": 1999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1968,
											"end": 1999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 1999,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 1999,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1968,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2196,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2161,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2197,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2161,
											"end": 2197,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2197,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2197,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2161,
											"end": 2197,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2197,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2197,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2197,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2197,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2161,
											"end": 2197,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2197,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2197,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2197,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2261,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2240,
											"end": 2261,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2261,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2261,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2240,
											"end": 2261,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2261,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2261,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2261,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2261,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2261,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2261,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2261,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2365,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 2339,
											"end": 2354,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2339,
											"end": 2365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2339,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2365,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2339,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2323,
											"end": 2365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2365,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 2372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 2372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 4340,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3859,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4103,
											"end": 4117,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4103,
											"end": 4117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4103,
											"end": 4117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4103,
											"end": 4117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4103,
											"end": 4117,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4103,
											"end": 4117,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4103,
											"end": 4117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4103,
											"end": 4117,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4103,
											"end": 4117,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4103,
											"end": 4117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4117,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4099,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4117,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4081,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4081,
											"end": 4118,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4081,
											"end": 4118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4081,
											"end": 4118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4081,
											"end": 4118,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4081,
											"end": 4118,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4081,
											"end": 4118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4211,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4198,
											"end": 4211,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4194,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4211,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4211,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4171,
											"end": 4212,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4171,
											"end": 4212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4212,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4212,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4171,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4301,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4287,
											"end": 4301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4287,
											"end": 4301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4301,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4301,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4287,
											"end": 4301,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4301,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4301,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4287,
											"end": 4301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4310,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4287,
											"end": 4310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 4311,
											"end": 4332,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 4340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 478,
											"end": 502,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 478,
											"end": 502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 537,
											"end": 578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 537,
											"end": 578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 537,
											"end": 578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 604,
											"end": 756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 687,
											"end": 694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 740,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 742,
											"end": 747,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 723,
											"end": 748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 723,
											"end": 748,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 723,
											"end": 748,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 723,
											"end": 748,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 723,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 723,
											"end": 748,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 723,
											"end": 748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 723,
											"end": 748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 723,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 723,
											"end": 748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 723,
											"end": 748,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 723,
											"end": 748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 723,
											"end": 748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 723,
											"end": 748,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 723,
											"end": 748,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 723,
											"end": 748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 723,
											"end": 748,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 723,
											"end": 748,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 723,
											"end": 748,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 723,
											"end": 748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 723,
											"end": 748,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 723,
											"end": 748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 723,
											"end": 748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 723,
											"end": 748,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 713,
											"end": 749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 713,
											"end": 749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 713,
											"end": 749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 713,
											"end": 749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 713,
											"end": 749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 713,
											"end": 749,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 706,
											"end": 749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 706,
											"end": 749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 604,
											"end": 756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3853,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3407,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3595,
											"end": 3609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3595,
											"end": 3609,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3595,
											"end": 3609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3595,
											"end": 3609,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3595,
											"end": 3609,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3595,
											"end": 3609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3595,
											"end": 3609,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3595,
											"end": 3609,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3595,
											"end": 3609,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3581,
											"end": 3609,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3581,
											"end": 3609,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3581,
											"end": 3591,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3581,
											"end": 3609,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3581,
											"end": 3609,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3581,
											"end": 3609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3573,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3573,
											"end": 3610,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3573,
											"end": 3610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3573,
											"end": 3610,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3573,
											"end": 3610,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3573,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3715,
											"end": 3718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3689,
											"end": 3719,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3689,
											"end": 3719,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3689,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3689,
											"end": 3703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3703,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3689,
											"end": 3703,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3703,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3689,
											"end": 3703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3719,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3689,
											"end": 3719,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3719,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3681,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3681,
											"end": 3720,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3681,
											"end": 3720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3681,
											"end": 3720,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3681,
											"end": 3720,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3681,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3800,
											"end": 3823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 3824,
											"end": 3845,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 334,
											"end": 424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 404,
											"end": 417,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 397,
											"end": 418,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 386,
											"end": 418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 386,
											"end": 418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 430,
											"end": 546,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 430,
											"end": 546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 515,
											"end": 520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 500,
											"end": 521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 521,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 500,
											"end": 521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 493,
											"end": 498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 522,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 480,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 480,
											"end": 540,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 536,
											"end": 537,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 526,
											"end": 538,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 480,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 430,
											"end": 546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 430,
											"end": 546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 552,
											"end": 685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 620,
											"end": 640,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 611,
											"end": 640,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 611,
											"end": 640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 649,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 673,
											"end": 678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 649,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 649,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 649,
											"end": 679,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 649,
											"end": 679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 768,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 691,
											"end": 768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 728,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 746,
											"end": 762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 746,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 768,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 691,
											"end": 768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 691,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 896,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 774,
											"end": 896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 847,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 865,
											"end": 870,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 847,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 847,
											"end": 871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 847,
											"end": 871,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 847,
											"end": 871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 840,
											"end": 845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 837,
											"end": 872,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 827,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 827,
											"end": 890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 886,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 884,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 876,
											"end": 888,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 827,
											"end": 890,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 827,
											"end": 890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 774,
											"end": 896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 902,
											"end": 1041,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 902,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 948,
											"end": 953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 973,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 964,
											"end": 993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 964,
											"end": 993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1029,
											"end": 1034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1002,
											"end": 1035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1035,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1002,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 902,
											"end": 1041,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 902,
											"end": 1041,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 902,
											"end": 1041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 902,
											"end": 1041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 902,
											"end": 1041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1515,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1047,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1118,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1171,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1157,
											"end": 1166,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1155,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1167,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1172,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1256,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1137,
											"end": 1256,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1175,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1175,
											"end": 1254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1254,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1175,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1256,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1137,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1320,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1362,
											"end": 1369,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1351,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1360,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1320,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1370,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1320,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1370,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1421,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1445,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1490,
											"end": 1497,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1487,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1479,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1488,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1445,
											"end": 1498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1498,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1445,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1498,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1515,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1515,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1598,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1521,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 1592,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1604,
											"end": 1726,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1604,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1695,
											"end": 1700,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1677,
											"end": 1701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1701,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1677,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1702,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1657,
											"end": 1720,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1706,
											"end": 1718,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1720,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1657,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1604,
											"end": 1726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1604,
											"end": 1726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1871,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1732,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 1822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1823,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1859,
											"end": 1864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1832,
											"end": 1865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1865,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1832,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1871,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 2206,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1877,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 1987,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1973,
											"end": 1982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1971,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1983,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 1988,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2072,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1953,
											"end": 2072,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1991,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1991,
											"end": 2070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2070,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1991,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2072,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1953,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2181,
											"end": 2188,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2178,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2170,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2136,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2189,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2136,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 2206,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 2206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 2206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 2206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 2206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2535,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2212,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2319,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2305,
											"end": 2314,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2303,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2292,
											"end": 2315,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2320,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2404,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2285,
											"end": 2404,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2323,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2323,
											"end": 2402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2402,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2323,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2404,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2285,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2510,
											"end": 2517,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2499,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2468,
											"end": 2518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2518,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2468,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2518,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2518,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2535,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2535,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2659,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2541,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2646,
											"end": 2651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2628,
											"end": 2652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2652,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2628,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2616,
											"end": 2653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2887,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2665,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2758,
											"end": 2762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2785,
											"end": 2794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2877,
											"end": 2878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2875,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2859,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2809,
											"end": 2880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2880,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2809,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2887,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3011,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2893,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2998,
											"end": 3003,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2980,
											"end": 3004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 3004,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2980,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 2978,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3239,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3017,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3137,
											"end": 3146,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3161,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3229,
											"end": 3230,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3218,
											"end": 3227,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3211,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3161,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3161,
											"end": 3232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3161,
											"end": 3232,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3161,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3239,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3239,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3354,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3245,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3326,
											"end": 3347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3347,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3326,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3324,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3680,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3360,
											"end": 3680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3502,
											"end": 3511,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3498,
											"end": 3516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3526,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3588,
											"end": 3589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3577,
											"end": 3586,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3573,
											"end": 3590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3570,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3526,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3526,
											"end": 3591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3526,
											"end": 3591,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3526,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3601,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3669,
											"end": 3671,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3658,
											"end": 3667,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3645,
											"end": 3651,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3601,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3601,
											"end": 3673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3601,
											"end": 3673,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3601,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3680,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3680,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3866,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3686,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3734,
											"end": 3811,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3731,
											"end": 3732,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3724,
											"end": 3812,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3831,
											"end": 3835,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3828,
											"end": 3829,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3821,
											"end": 3836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3859,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3852,
											"end": 3853,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3860,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 4063,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3872,
											"end": 4063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3949,
											"end": 3950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3931,
											"end": 3951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3951,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3931,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3951,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3983,
											"end": 3984,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3965,
											"end": 3985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 3985,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3965,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3960,
											"end": 3985,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3960,
											"end": 3985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4005,
											"end": 4006,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4010,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4029,
											"end": 4032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4027,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4033,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4020,
											"end": 4056,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4020,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 4020,
											"end": 4056,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4036,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 4036,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4036,
											"end": 4054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4036,
											"end": 4054,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 4036,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4020,
											"end": 4056,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 4020,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 4063,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 4063,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 4063,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 4063,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 4063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Contracts/CoinFlip.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"betAmount()": "d24257c0",
							"betExpiration()": "d97310af",
							"cancel()": "ea8a1af0",
							"makeBet(bytes32)": "284152dc",
							"player1CommitmentHash(bool,uint256)": "ea05a57f",
							"revealWinner(bool,uint256)": "08fb69c6",
							"takeBet(bool)": "38a3fde7",
							"timeOut()": "614d85e1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"betAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"betExpiration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"makeBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"choice\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"player1CommitmentHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"choice\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"revealWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"choice\",\"type\":\"bool\"}],\"name\":\"takeBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeOut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/CoinFlip.sol\":\"CoinFlip\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/CoinFlip.sol\":{\"keccak256\":\"0x91292cd1a5440d1bf207a103889ff2ccc306898af142073f1fd40d4d1290bcc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e97f1c8caa41f2e698225c2d0aaf2c04d496fc71040417b7949e97c4b68c989\",\"dweb:/ipfs/QmQdLEnvoVz6daHpvBAW5zVoSqGz6LmGQvSxudyDFD786g\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "Contracts/CoinFlip.sol:CoinFlip",
								"label": "player1Address",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 13,
								"contract": "Contracts/CoinFlip.sol:CoinFlip",
								"label": "player2Address",
								"offset": 0,
								"slot": "1",
								"type": "t_address_payable"
							},
							{
								"astId": 15,
								"contract": "Contracts/CoinFlip.sol:CoinFlip",
								"label": "player1Commitment",
								"offset": 0,
								"slot": "2",
								"type": "t_bytes32"
							},
							{
								"astId": 17,
								"contract": "Contracts/CoinFlip.sol:CoinFlip",
								"label": "player2Guess",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 19,
								"contract": "Contracts/CoinFlip.sol:CoinFlip",
								"label": "betAmount",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 26,
								"contract": "Contracts/CoinFlip.sol:CoinFlip",
								"label": "betExpiration",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Contracts/CoinFlip.sol": {
				"ast": {
					"absolutePath": "Contracts/CoinFlip.sol",
					"exportedSymbols": {
						"CoinFlip": [
							254
						]
					},
					"id": 255,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CoinFlip",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 254,
							"linearizedBaseContracts": [
								254
							],
							"name": "CoinFlip",
							"nameLocation": "74:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "player1Address",
									"nameLocation": "162:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "146:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "146:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830",
												"id": 5,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "188:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0x0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 4,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "179:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 3,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "179:9:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "179:13:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 13,
									"mutability": "mutable",
									"name": "player2Address",
									"nameLocation": "241:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "225:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 8,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "225:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830",
												"id": 11,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "267:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0x0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 10,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "258:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 9,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "258:9:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "258:13:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "player1Commitment",
									"nameLocation": "313:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "305:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 14,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "305:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 17,
									"mutability": "mutable",
									"name": "player2Guess",
									"nameLocation": "393:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "388:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 16,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "388:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "d24257c0",
									"id": 19,
									"mutability": "mutable",
									"name": "betAmount",
									"nameLocation": "493:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "478:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "478:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d97310af",
									"id": 26,
									"mutability": "mutable",
									"name": "betExpiration",
									"nameLocation": "552:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "537:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 20,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "537:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9935"
										},
										"id": 25,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 1157...(70 digits omitted)...9936"
											},
											"id": 23,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "32",
												"id": 21,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "568:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "323536",
												"id": 22,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "571:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_256_by_1",
													"typeString": "int_const 256"
												},
												"value": "256"
											},
											"src": "568:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 1157...(70 digits omitted)...9936"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 24,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "577:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "568:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9935"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "696:60:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 38,
																	"name": "choice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "734:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 39,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "742:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 36,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "723:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "727:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "723:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "723:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 35,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "713:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "713:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 34,
												"id": 42,
												"nodeType": "Return",
												"src": "706:43:0"
											}
										]
									},
									"functionSelector": "ea05a57f",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "player1CommitmentHash",
									"nameLocation": "613:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "choice",
												"nameLocation": "641:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "636:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 27,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "636:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "657:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "649:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:28:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "687:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:9:0"
									},
									"scope": 254,
									"src": "604:152:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "811:662:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 50,
																"name": "player1Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "1009:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 53,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1036:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1027:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 51,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1027:9:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1027:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1009:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 49,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1001:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1001:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "1001:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 59,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1146:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1150:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1146:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1158:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1146:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 58,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1138:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1138:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "1138:22:0"
											},
											{
												"expression": {
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 65,
														"name": "betAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1170:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 66,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1182:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1186:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1182:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1170:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "1170:21:0"
											},
											{
												"expression": {
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 70,
														"name": "player1Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1353:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 73,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1378:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1382:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1378:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1370:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 71,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1370:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1370:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1353:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1353:36:0"
											},
											{
												"expression": {
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 78,
														"name": "player1Commitment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1442:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 79,
														"name": "hash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "1462:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1442:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "1442:24:0"
											}
										]
									},
									"functionSelector": "284152dc",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "makeBet",
									"nameLocation": "771:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "788:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "780:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 45,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "779:14:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "811:0:0"
									},
									"scope": 254,
									"src": "762:711:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "1527:845:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 89,
																"name": "player1Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "1601:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1627:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1619:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1619:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1601:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1593:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1593:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "1593:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "player2Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "1797:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1823:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1815:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 99,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1815:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1815:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1797:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 97,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1789:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1789:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "1789:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 107,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1976:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1980:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1976:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 109,
																"name": "betAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1989:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1976:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1968:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1968:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "1968:31:0"
											},
											{
												"expression": {
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 113,
														"name": "player2Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2161:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 116,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2186:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2190:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2186:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2178:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 114,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2178:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2178:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2161:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "2161:36:0"
											},
											{
												"expression": {
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 121,
														"name": "player2Guess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "2240:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 122,
														"name": "choice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "2255:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2240:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2240:21:0"
											},
											{
												"expression": {
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 125,
														"name": "betExpiration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "2323:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 126,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2339:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2345:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2339:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3234",
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2357:8:0",
															"subdenomination": "hours",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "24"
														},
														"src": "2339:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2323:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2323:42:0"
											}
										]
									},
									"functionSelector": "38a3fde7",
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "takeBet",
									"nameLocation": "1488:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "choice",
												"nameLocation": "1502:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "1497:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 84,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1497:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1496:13:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1527:0:0"
									},
									"scope": 254,
									"src": "1479:893:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "2438:963:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 141,
																"name": "player2Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "2602:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2628:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2620:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 142,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2620:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2620:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2602:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2594:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2594:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "2594:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 153,
																				"name": "choice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 135,
																				"src": "2879:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			{
																				"id": 154,
																				"name": "nonce",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 137,
																				"src": "2887:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 151,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "2868:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "2872:6:0",
																			"memberName": "encode",
																			"nodeType": "MemberAccess",
																			"src": "2868:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2868:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 150,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "2858:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2858:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 157,
																"name": "player1Commitment",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "2898:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "2858:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2850:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2850:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "2850:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 162,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2985:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2991:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2985:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 164,
																"name": "betExpiration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "3003:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2985:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2977:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2977:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "2977:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 168,
														"name": "player2Guess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "3137:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 169,
														"name": "choice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "3153:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3137:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 192,
													"nodeType": "Block",
													"src": "3285:110:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 187,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3370:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_CoinFlip_$254",
																						"typeString": "contract CoinFlip"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_CoinFlip_$254",
																						"typeString": "contract CoinFlip"
																					}
																				],
																				"id": 186,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3362:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 185,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3362:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3362:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3376:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3362:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 182,
																		"name": "player1Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 7,
																		"src": "3338:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3353:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "3338:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3338:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 191,
															"nodeType": "ExpressionStatement",
															"src": "3338:46:0"
														}
													]
												},
												"id": 193,
												"nodeType": "IfStatement",
												"src": "3133:262:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "3161:110:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 176,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3246:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_CoinFlip_$254",
																						"typeString": "contract CoinFlip"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_CoinFlip_$254",
																						"typeString": "contract CoinFlip"
																					}
																				],
																				"id": 175,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3238:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 174,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3238:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3238:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3252:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3238:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 171,
																		"name": "player2Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 13,
																		"src": "3214:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3229:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "3214:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3214:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 180,
															"nodeType": "ExpressionStatement",
															"src": "3214:46:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "08fb69c6",
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revealWinner",
									"nameLocation": "2387:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "choice",
												"nameLocation": "2406:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2401:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2401:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "2422:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2414:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2414:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2400:28:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2438:0:0"
									},
									"scope": 254,
									"src": "2378:1023:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "3435:418:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 199,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3581:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3585:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3581:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 201,
																"name": "player1Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "3595:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3581:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 198,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3573:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3573:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "3573:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 206,
																"name": "player2Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "3689:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3715:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3707:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 207,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3707:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3707:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3689:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 205,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3681:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3681:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "3681:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 219,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3832:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CoinFlip_$254",
																			"typeString": "contract CoinFlip"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CoinFlip_$254",
																			"typeString": "contract CoinFlip"
																		}
																	],
																	"id": 218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3824:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 217,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3824:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3824:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3838:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "3824:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 214,
															"name": "player1Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "3800:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3815:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3800:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3800:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "3800:46:0"
											}
										]
									},
									"functionSelector": "ea8a1af0",
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cancel",
									"nameLocation": "3416:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3423:2:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3435:0:0"
									},
									"scope": 254,
									"src": "3407:446:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "3888:452:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 229,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4089:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4093:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4089:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 231,
																"name": "player2Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "4103:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4089:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4081:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4081:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "4081:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 236,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4179:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4185:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4179:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 238,
																"name": "betExpiration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "4198:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4179:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4171:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4171:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "4171:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 247,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4319:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CoinFlip_$254",
																			"typeString": "contract CoinFlip"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CoinFlip_$254",
																			"typeString": "contract CoinFlip"
																		}
																	],
																	"id": 246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4311:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 245,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4311:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4311:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4325:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "4311:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 242,
															"name": "player2Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "4287:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4302:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4287:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4287:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "4287:46:0"
											}
										]
									},
									"functionSelector": "614d85e1",
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "timeOut",
									"nameLocation": "3868:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3876:2:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3888:0:0"
									},
									"scope": 254,
									"src": "3859:481:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 255,
							"src": "65:4277:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:4310:0"
				},
				"id": 0
			}
		}
	}
}